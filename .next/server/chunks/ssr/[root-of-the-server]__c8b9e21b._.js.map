{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management_System/src/components/page-header.tsx"],"sourcesContent":["type PageHeaderProps = {\n  title: string;\n  description?: string;\n  children?: React.ReactNode;\n};\n\nexport function PageHeader({ title, description, children }: PageHeaderProps) {\n  return (\n    <div className=\"flex flex-col items-start justify-between gap-4 md:flex-row md:items-center\">\n      <div className=\"grid gap-1\">\n        <h1 className=\"text-2xl font-bold tracking-tight md:text-3xl\">{title}</h1>\n        {description && (\n          <p className=\"text-muted-foreground\">{description}</p>\n        )}\n      </div>\n      {children && <div className=\"flex shrink-0 gap-2\">{children}</div>}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAMO,SAAS,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAmB;IAC1E,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAiD;;;;;;oBAC9D,6BACC,8OAAC;wBAAE,WAAU;kCAAyB;;;;;;;;;;;;YAGzC,0BAAY,8OAAC;gBAAI,WAAU;0BAAuB;;;;;;;;;;;;AAGzD","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management_System/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management_System/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management_System/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<IHTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management_System/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAEA;AACA;AAEA;AACA;AANA;;;;;;AAQA,MAAM,cAAc,2KAAA,CAAA,OAAyB;AAE7C,MAAM,qBAAqB,2KAAA,CAAA,UAA4B;AAEvD,MAAM,oBAAoB,2KAAA,CAAA,SAA2B;AAErD,MAAM,mCAAqB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAA,CAAA,UAA4B;QAC3B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;AAGT,mBAAmB,WAAW,GAAG,2KAAA,CAAA,UAA4B,CAAC,WAAW;AAEzE,MAAM,mCAAqB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,2KAAA,CAAA,UAA4B;gBAC3B,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;;;;;;;;;;;AAIf,mBAAmB,WAAW,GAAG,2KAAA,CAAA,UAA4B,CAAC,WAAW;AAEzE,MAAM,oBAAoB,CAAC,EACzB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oDACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG;AAEhC,MAAM,oBAAoB,CAAC,EACzB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG;AAEhC,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAA,CAAA,QAA0B;QACzB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,2KAAA,CAAA,QAA0B,CAAC,WAAW;AAErE,MAAM,uCAAyB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAA,CAAA,cAAgC;QAC/B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,uBAAuB,WAAW,GAChC,2KAAA,CAAA,cAAgC,CAAC,WAAW;AAE9C,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAA,CAAA,SAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,KAAK;QAC/B,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,2KAAA,CAAA,SAA2B,CAAC,WAAW;AAEvE,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAA,CAAA,SAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;YAAE,SAAS;QAAU,IACpC,gBACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,2KAAA,CAAA,SAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management_System/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 423, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management_System/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 455, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management_System/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 608, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management_System/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 800, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management_System/src/components/dashboard/item-form.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { useEffect } from \"react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport type { Item, Category } from \"@/types\";\n\nconst itemFormSchema = z.object({\n  name: z.string().min(2, \"Name must be at least 2 characters.\"),\n  sku: z.string().min(2, \"SKU must be at least 2 characters.\"),\n  categoryId: z.string({ required_error: \"Please select a category.\" }),\n  quantity: z.coerce.number().int().nonnegative(\"Quantity must be a positive number.\"),\n  price: z.coerce.number().positive(\"Price must be a positive number.\"),\n  reorderPoint: z.coerce.number().int().nonnegative(\"Reorder point must be a positive number.\"),\n  supplierName: z.string().min(2, \"Supplier name must be at least 2 characters.\"),\n});\n\ntype ItemFormProps = {\n  item?: Item;\n  categories: Category[];\n  onSuccess: () => void;\n  onAddItem?: (newItem: Omit<Item, 'id' | 'averageDailySales' | 'leadTimeDays'>) => void;\n  onEditItem?: (updatedItem: Item) => void;\n};\n\nexport function ItemForm({ item, categories, onSuccess, onAddItem, onEditItem }: ItemFormProps) {\n  const { toast } = useToast();\n\n  const form = useForm<z.infer<typeof itemFormSchema>>({\n    resolver: zodResolver(itemFormSchema),\n    defaultValues: item || {\n      name: \"\",\n      sku: \"\",\n      categoryId: \"\",\n      quantity: 0,\n      price: 0,\n      reorderPoint: 0,\n      supplierName: \"\",\n    },\n  });\n\n  useEffect(() => {\n    if (item) {\n      form.reset(item);\n    } else {\n        form.reset({\n            name: \"\",\n            sku: \"\",\n            categoryId: \"\",\n            quantity: 0,\n            price: 0,\n            reorderPoint: 0,\n            supplierName: \"\",\n        });\n    }\n  }, [item, form]);\n\n  function onSubmit(values: z.infer<typeof itemFormSchema>) {\n    if (item && onEditItem) {\n        onEditItem({ ...item, ...values });\n    } else if (onAddItem) {\n        onAddItem(values);\n    }\n    \n    toast({\n      title: `Item ${item ? \"updated\" : \"created\"}`,\n      description: `The item \"${values.name}\" has been saved successfully.`,\n    });\n    onSuccess();\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n        <FormField\n          control={form.control}\n          name=\"name\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Item Name</FormLabel>\n              <FormControl>\n                <Input placeholder=\"e.g. Wireless Keyboard\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"sku\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>SKU</FormLabel>\n              <FormControl>\n                <Input placeholder=\"e.g. WK-0012\" {...field} />\n              </FormControl>\n              <FormDescription>Stock Keeping Unit</FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n            control={form.control}\n            name=\"categoryId\"\n            render={({ field }) => (\n                <FormItem>\n                <FormLabel>Category</FormLabel>\n                <Select onValueChange={field.onChange} defaultValue={field.value}>\n                    <FormControl>\n                    <SelectTrigger>\n                        <SelectValue placeholder=\"Select a category\" />\n                    </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                    {categories.map((category) => (\n                        <SelectItem key={category.id} value={category.id}>\n                        {category.name}\n                        </SelectItem>\n                    ))}\n                    </SelectContent>\n                </Select>\n                <FormMessage />\n                </FormItem>\n            )}\n        />\n        <div className=\"grid grid-cols-2 gap-4\">\n            <FormField\n            control={form.control}\n            name=\"quantity\"\n            render={({ field }) => (\n                <FormItem>\n                <FormLabel>Quantity</FormLabel>\n                <FormControl>\n                    <Input type=\"number\" {...field} />\n                </FormControl>\n                <FormMessage />\n                </FormItem>\n            )}\n            />\n            <FormField\n            control={form.control}\n            name=\"price\"\n            render={({ field }) => (\n                <FormItem>\n                <FormLabel>Price</FormLabel>\n                <FormControl>\n                    <Input type=\"number\" step=\"0.01\" placeholder=\"$0.00\" {...field} />\n                </FormControl>\n                <FormMessage />\n                </FormItem>\n            )}\n            />\n        </div>\n        <FormField\n          control={form.control}\n          name=\"reorderPoint\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Re-order Point</FormLabel>\n              <FormControl>\n                <Input type=\"number\" {...field} />\n              </FormControl>\n              <FormDescription>\n                When stock reaches this level, a re-order is suggested.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"supplierName\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Supplier Name</FormLabel>\n              <FormControl>\n                <Input placeholder=\"e.g. Office Supplies Co.\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\" className=\"w-full\">\n          {item ? \"Update\" : \"Create\"} Item\n        </Button>\n      </form>\n    </Form>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1266, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management_System/src/components/dashboard/items-table.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  SortingState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from \"@tanstack/react-table\";\nimport { MoreHorizontal, PlusCircle, Edit, Trash2, ShoppingCart } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport {\n    Dialog,\n    DialogContent,\n    DialogDescription,\n    DialogFooter,\n    DialogHeader,\n    DialogTitle,\n    DialogTrigger,\n  } from \"@/components/ui/dialog\";\nimport {\n    AlertDialog,\n    AlertDialogAction,\n    AlertDialogCancel,\n    AlertDialogContent,\n    AlertDialogDescription,\n    AlertDialogFooter,\n    AlertDialogHeader,\n    AlertDialogTitle,\n} from \"@/components/ui/alert-dialog\";\nimport { Badge } from \"@/components/ui/badge\";\nimport type { Item, Category } from \"@/types\";\nimport { ItemForm } from \"./item-form\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Label } from \"../ui/label\";\n\ntype ItemsTableProps = {\n  items: Item[];\n  categories: Category[];\n  view: 'all' | 'low-stock';\n  onAddItem: (newItem: Omit<Item, 'id' | 'averageDailySales' | 'leadTimeDays'>) => void;\n  onEditItem: (updatedItem: Item) => void;\n  onDeleteItem: (itemId: string) => void;\n  onSellItem: (item: Item, quantity: number) => void;\n};\n\nexport function ItemsTable({ items, categories, view, onAddItem, onEditItem, onDeleteItem, onSellItem }: ItemsTableProps) {\n  const { toast } = useToast();\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>([]);\n  const [isNewItemDialogOpen, setIsNewItemDialogOpen] = React.useState(false);\n  const [isEditDialogOpen, setIsEditDialogOpen] = React.useState(false);\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = React.useState(false);\n  const [isSellDialogOpen, setIsSellDialogOpen] = React.useState(false);\n  const [selectedItem, setSelectedItem] = React.useState<Item | null>(null);\n  const [sellQuantity, setSellQuantity] = React.useState(1);\n\n  const getCategoryName = (categoryId: string) => {\n    return categories.find((c) => c.id === categoryId)?.name || \"N/A\";\n  };\n  \n  const handleDelete = () => {\n    if (selectedItem) {\n      onDeleteItem(selectedItem.id);\n      toast({\n        title: \"Item Deleted\",\n        description: `Item \"${selectedItem.name}\" has been deleted.`,\n      });\n      setIsDeleteDialogOpen(false);\n      setSelectedItem(null);\n    }\n  };\n\n  const handleSellConfirm = () => {\n    if (selectedItem && sellQuantity > 0 && sellQuantity <= selectedItem.quantity) {\n      onSellItem(selectedItem, sellQuantity);\n      toast({\n        title: \"Item Sold\",\n        description: `Sold ${sellQuantity} of \"${selectedItem.name}\".`,\n      });\n      setIsSellDialogOpen(false);\n      setSelectedItem(null);\n      setSellQuantity(1);\n    } else {\n        toast({\n            title: \"Invalid Quantity\",\n            description: `Please enter a valid quantity to sell.`,\n            variant: \"destructive\",\n          });\n    }\n  };\n\n  const columns: ColumnDef<Item>[] = [\n    {\n      accessorKey: \"name\",\n      header: \"Name\",\n      cell: ({ row }) => <div className=\"font-medium\">{row.getValue(\"name\")}</div>,\n    },\n    {\n      accessorKey: \"sku\",\n      header: \"SKU\",\n    },\n    {\n      accessorKey: \"categoryId\",\n      header: \"Category\",\n      cell: ({ row }) => getCategoryName(row.getValue(\"categoryId\")),\n      filterFn: (row, id, value) => {\n        return value.includes(row.getValue(id));\n      },\n    },\n    {\n      accessorKey: \"quantity\",\n      header: \"Quantity\",\n      cell: ({ row }) => {\n        const quantity = parseFloat(row.getValue(\"quantity\"));\n        let badgeVariant: \"default\" | \"secondary\" | \"destructive\" | \"outline\" = \"secondary\";\n        if (quantity === 0) {\n            badgeVariant = \"destructive\";\n        } else if (quantity <= row.original.reorderPoint) {\n            badgeVariant = \"outline\";\n        }\n        return <Badge variant={badgeVariant}>{quantity}</Badge>;\n      },\n    },\n    {\n      accessorKey: \"price\",\n      header: \"Price\",\n      cell: ({ row }) => {\n        const amount = parseFloat(row.getValue(\"price\"));\n        const formatted = new Intl.NumberFormat(\"en-US\", {\n          style: \"currency\",\n          currency: \"USD\",\n        }).format(amount);\n        return <div className=\"text-left font-medium\">{formatted}</div>;\n      },\n    },\n    {\n      id: \"actions\",\n      cell: ({ row }) => {\n        const item = row.original;\n  \n        return (\n          <div className=\"text-right\">\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n                  <span className=\"sr-only\">Open menu</span>\n                  <MoreHorizontal className=\"h-4 w-4\" />\n                </Button>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent align=\"end\">\n                <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                <DropdownMenuItem onClick={() => {\n                  navigator.clipboard.writeText(item.id);\n                  toast({\n                    title: \"Copied!\",\n                    description: \"Item ID copied to clipboard.\",\n                  });\n                }}>\n                  Copy item ID\n                </DropdownMenuItem>\n                <DropdownMenuSeparator />\n                {view === 'all' && item.quantity > 0 && (\n                    <DropdownMenuItem\n                        onClick={() => {\n                            setSelectedItem(item);\n                            setSellQuantity(1);\n                            setIsSellDialogOpen(true);\n                        }}\n                    >\n                        <ShoppingCart className=\"mr-2 h-4 w-4\" />\n                        Sell Item\n                    </DropdownMenuItem>\n                )}\n                <DropdownMenuItem onClick={() => {\n                    setSelectedItem(item);\n                    setIsEditDialogOpen(true);\n                }}>\n                    <Edit className=\"mr-2 h-4 w-4\" />\n                    Edit\n                </DropdownMenuItem>\n                <DropdownMenuItem\n                  className=\"text-destructive focus:text-destructive focus:bg-destructive/10\"\n                  onClick={() => {\n                    setSelectedItem(item);\n                    setIsDeleteDialogOpen(true);\n                  }}\n                >\n                  <Trash2 className=\"mr-2 h-4 w-4\" />\n                  Delete\n                </DropdownMenuItem>\n              </DropdownMenuContent>\n            </DropdownMenu>\n          </div>\n        );\n      },\n    },\n  ];\n\n  const table = useReactTable({\n    data: items,\n    columns,\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    state: {\n      sorting,\n      columnFilters,\n    },\n  });\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"flex items-center py-4\">\n        <Input\n          placeholder=\"Filter items by name...\"\n          value={(table.getColumn(\"name\")?.getFilterValue() as string) ?? \"\"}\n          onChange={(event) =>\n            table.getColumn(\"name\")?.setFilterValue(event.target.value)\n          }\n          className=\"max-w-sm\"\n        />\n        <Dialog open={isNewItemDialogOpen} onOpenChange={setIsNewItemDialogOpen}>\n            <DialogTrigger asChild>\n                <Button className=\"ml-auto\">\n                    <PlusCircle className=\"mr-2 h-4 w-4\" /> Add Item\n                </Button>\n            </DialogTrigger>\n            <DialogContent className=\"sm:max-w-[425px]\">\n                <DialogHeader>\n                    <DialogTitle>Add New Item</DialogTitle>\n                    <DialogDescription>\n                        Fill in the details below to add a new item to your inventory.\n                    </DialogDescription>\n                </DialogHeader>\n                <ItemForm \n                    categories={categories} \n                    onSuccess={() => setIsNewItemDialogOpen(false)} \n                    onAddItem={onAddItem}\n                />\n            </DialogContent>\n        </Dialog>\n      </div>\n      <div className=\"rounded-md border\">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <TableHead key={header.id}>\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                          )}\n                    </TableHead>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow\n                  key={row.id}\n                  data-state={row.getIsSelected() && \"selected\"}\n                >\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell key={cell.id}>\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell\n                  colSpan={columns.length}\n                  className=\"h-24 text-center\"\n                >\n                  No results.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n      <div className=\"flex items-center justify-end space-x-2 py-4\">\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => table.previousPage()}\n          disabled={!table.getCanPreviousPage()}\n        >\n          Previous\n        </Button>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => table.nextPage()}\n          disabled={!table.getCanNextPage()}\n        >\n          Next\n        </Button>\n      </div>\n\n      {/* Edit Item Dialog */}\n      <Dialog open={isEditDialogOpen} onOpenChange={setIsEditDialogOpen}>\n        <DialogContent className=\"sm:max-w-[425px]\">\n          <DialogHeader>\n            <DialogTitle>Edit Item</DialogTitle>\n            <DialogDescription>\n                Update the details for the \"{selectedItem?.name}\" item.\n            </DialogDescription>\n          </DialogHeader>\n          <ItemForm\n            item={selectedItem!}\n            categories={categories}\n            onSuccess={() => {\n              setIsEditDialogOpen(false);\n              setSelectedItem(null);\n            }}\n            onEditItem={onEditItem}\n          />\n        </DialogContent>\n      </Dialog>\n      \n      {/* Delete Item Alert Dialog */}\n      <AlertDialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Are you sure?</AlertDialogTitle>\n            <AlertDialogDescription>\n              This action cannot be undone. This will permanently delete the item\n              \"{selectedItem?.name}\".\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel onClick={() => setSelectedItem(null)}>Cancel</AlertDialogCancel>\n            <AlertDialogAction onClick={handleDelete}>Delete</AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n\n      {/* Sell Item Dialog */}\n      <Dialog open={isSellDialogOpen} onOpenChange={setIsSellDialogOpen}>\n        <DialogContent className=\"sm:max-w-[425px]\">\n            <DialogHeader>\n                <DialogTitle>Sell Item: {selectedItem?.name}</DialogTitle>\n                <DialogDescription>\n                    Enter the quantity to sell. Max: {selectedItem?.quantity}\n                </DialogDescription>\n            </DialogHeader>\n            <div className=\"grid gap-4 py-4\">\n                <div className=\"grid grid-cols-4 items-center gap-4\">\n                    <Label htmlFor=\"sell-quantity\" className=\"text-right\">\n                        Quantity\n                    </Label>\n                    <Input\n                        id=\"sell-quantity\"\n                        type=\"number\"\n                        min=\"1\"\n                        max={selectedItem?.quantity}\n                        value={sellQuantity}\n                        onChange={(e) => setSellQuantity(parseInt(e.target.value, 10) || 1)}\n                        className=\"col-span-3\"\n                    />\n                </div>\n            </div>\n            <DialogFooter>\n                <Button variant=\"outline\" onClick={() => setIsSellDialogOpen(false)}>Cancel</Button>\n                <Button onClick={handleSellConfirm}>Confirm Sale</Button>\n            </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2015, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management_System/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 2039, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management_System/src/components/dashboard/sold-items-table.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport {\n  ColumnDef,\n  SortingState,\n  flexRender,\n  getCoreRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from \"@tanstack/react-table\";\nimport { format } from 'date-fns';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport type { SoldItem } from \"@/types\";\n\ntype SoldItemsTableProps = {\n  items: SoldItem[];\n};\n\nexport const columns: ColumnDef<SoldItem>[] = [\n    {\n      accessorKey: \"name\",\n      header: \"Name\",\n      cell: ({ row }) => <div className=\"font-medium\">{row.getValue(\"name\")}</div>,\n    },\n    {\n      accessorKey: \"sku\",\n      header: \"SKU\",\n    },\n    {\n      accessorKey: \"quantitySold\",\n      header: \"Quantity Sold\",\n      cell: ({ row }) => <div className=\"text-center\">{row.getValue(\"quantitySold\")}</div>\n    },\n    {\n      accessorKey: \"price\",\n      header: \"Price per Item\",\n      cell: ({ row }) => {\n        const amount = parseFloat(row.getValue(\"price\"));\n        const formatted = new Intl.NumberFormat(\"en-US\", {\n          style: \"currency\",\n          currency: \"USD\",\n        }).format(amount);\n        return <div className=\"text-left font-medium\">{formatted}</div>;\n      },\n    },\n    {\n        accessorKey: \"totalRevenue\",\n        header: \"Total Revenue\",\n        cell: ({ row }) => {\n            const amount = row.original.price * row.original.quantitySold;\n            const formatted = new Intl.NumberFormat(\"en-US\", {\n              style: \"currency\",\n              currency: \"USD\",\n            }).format(amount);\n            return <div className=\"text-left font-bold text-primary\">{formatted}</div>;\n          },\n    },\n    {\n        accessorKey: \"dateSold\",\n        header: \"Date Sold\",\n        cell: ({ row }) => {\n            const date = new Date(row.getValue(\"dateSold\"));\n            return <div>{format(date, 'PPP')}</div>\n        }\n    }\n  ];\n\nexport function SoldItemsTable({ items }: SoldItemsTableProps) {\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  \n  const table = useReactTable({\n    data: items,\n    columns,\n    onSortingChange: setSorting,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    state: {\n      sorting,\n    },\n  });\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"rounded-md border mt-4\">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <TableHead key={header.id}>\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                          )}\n                    </TableHead>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow\n                  key={row.id}\n                  data-state={row.getIsSelected() && \"selected\"}\n                >\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell key={cell.id}>\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell\n                  colSpan={columns.length}\n                  className=\"h-24 text-center\"\n                >\n                  No sold items yet.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n      <div className=\"flex items-center justify-end space-x-2 py-4\">\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => table.previousPage()}\n          disabled={!table.getCanPreviousPage()}\n        >\n          Previous\n        </Button>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => table.nextPage()}\n          disabled={!table.getCanNextPage()}\n        >\n          Next\n        </Button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2277, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management_System/src/ai/flows/generate-stock-alert.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview This file defines a Genkit flow for generating intelligent stock alerts.\n *\n * - generateStockAlert - A function that generates a stock alert based on provided data.\n * - GenerateStockAlertInput - The input type for the generateStockAlert function.\n * - GenerateStockAlertOutput - The return type for the generateStockAlert function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateStockAlertInputSchema = z.object({\n  lowStockItems: z.array(\n    z.object({\n      itemId: z.string().describe('The unique identifier for the item.'),\n      itemName: z.string().describe('The name of the item.'),\n      currentQuantity: z.number().describe('The current quantity in stock.'),\n      reorderPoint: z.number().describe('The reorder point for the item.'),\n      averageDailySales: z\n        .number()\n        .describe('The average daily sales volume of the item.'),\n      sellingPrice: z.number().describe('The selling price of the item.'),\n      supplierName: z.string().describe('The name of the supplier.'),\n      leadTimeDays: z.number().describe('The lead time in days from the supplier.'),\n    })\n  ).describe('An array of items with low stock levels.'),\n});\nexport type GenerateStockAlertInput = z.infer<typeof GenerateStockAlertInputSchema>;\n\nconst GenerateStockAlertOutputSchema = z.object({\n  potentialRevenueLoss: z.number().describe('The total estimated potential revenue loss in USD for all low-stock items if they are not restocked.'),\n  overallDisruptionLevel: z.enum([\"Low\", \"Medium\", \"High\"]).describe('An overall assessment of the disruption level to the business (Low, Medium, or High).'),\n  suggestedActions: z.array(z.object({\n    itemName: z.string().describe('The name of the item requiring action.'),\n    action: z.string().describe('The suggested course of action for this specific item.'),\n    priority: z.number().int().describe('The priority of the action, where 1 is the highest priority.')\n  })).describe('A prioritized list of suggested actions to mitigate the stock issues.'),\n});\nexport type GenerateStockAlertOutput = z.infer<typeof GenerateStockAlertOutputSchema>;\n\nexport async function generateStockAlert(input: GenerateStockAlertInput): Promise<GenerateStockAlertOutput> {\n  return generateStockAlertFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateStockAlertPrompt',\n  input: {schema: GenerateStockAlertInputSchema},\n  output: {schema: GenerateStockAlertOutputSchema},\n  prompt: `You are a world-class AI inventory management strategist. Your task is to analyze a list of low-stock items and provide a highly advanced and actionable alert.\n\n  Analyze the provided data to generate a structured alert with the following components:\n\n  1.  **Potential Revenue Loss**: Calculate the total estimated revenue at risk if all these items go completely out of stock before they can be replenished. Base this on the remaining stock, average daily sales, and selling price.\n\n  2.  **Overall Disruption Level**: Assess the overall business disruption. Consider the number of critical items, how quickly they are selling out, and supplier lead times. Categorize this as 'Low', 'Medium', or 'High'. A few fast-selling items with long lead times could be a 'High' disruption, even if the total revenue loss is moderate.\n\n  3.  **Suggested Courses of Action**: Provide a list of clear, prioritized, and actionable steps for the inventory manager. For each action, specify the item, the recommended action (e.g., \"Immediate re-order,\" \"Expedite shipment,\" \"Contact supplier\"), and a priority level (1 being the most urgent). Prioritize actions based on which items will stock out the soonest (days until stockout = current quantity / average daily sales) and their lead time. Items that will stock out before the supplier can deliver should be the highest priority.\n\n  Here is the data for the low-stock items:\n\n  {{#each lowStockItems}}\n  - Item: {{itemName}} (ID: {{itemId}})\n    - Current Quantity: {{currentQuantity}}\n    - Re-order Point: {{reorderPoint}}\n    - Avg. Daily Sales: {{averageDailySales}}\n    - Selling Price: $ {{sellingPrice}}\n    - Supplier: {{supplierName}}\n    - Lead Time: {{leadTimeDays}} days\n  {{/each}}\n\n  Based on this data, generate the structured stock alert.\n  `,\n});\n\nconst generateStockAlertFlow = ai.defineFlow(\n  {\n    name: 'generateStockAlertFlow',\n    inputSchema: GenerateStockAlertInputSchema,\n    outputSchema: GenerateStockAlertOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IA2CsB,qBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 2290, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management_System/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2371, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management_System/src/components/dashboard/ai-alert.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from 'react';\nimport { generateStockAlert, type GenerateStockAlertOutput } from '@/ai/flows/generate-stock-alert';\nimport type { Item } from '@/types';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { AlertTriangle, Zap, RefreshCw } from 'lucide-react';\nimport { Badge } from '@/components/ui/badge';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '../ui/table';\n\ntype AIAlertProps = {\n  lowStockItems: Item[];\n};\n\nexport function AIAlert({ lowStockItems }: AIAlertProps) {\n  const [alert, setAlert] = React.useState<GenerateStockAlertOutput | null>(null);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [error, setError] = React.useState<string | null>(null);\n  const [retryCount, setRetryCount] = React.useState(0);\n\n  const fetchAlert = React.useCallback(async () => {\n    if (lowStockItems.length === 0) {\n      setIsLoading(false);\n      setAlert(null);\n      setError(null);\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n    const alertInput = {\n      lowStockItems: lowStockItems.map(item => ({\n        itemId: item.id,\n        itemName: item.name,\n        currentQuantity: item.quantity,\n        reorderPoint: item.reorderPoint,\n        averageDailySales: item.averageDailySales,\n        sellingPrice: item.price,\n        supplierName: item.supplierName,\n        leadTimeDays: item.leadTimeDays,\n      })),\n    };\n\n    try {\n      const result = await generateStockAlert(alertInput);\n      setAlert(result);\n    } catch (e: any) {\n      console.error('Error generating AI stock alert:', e);\n      const errorMessage = e.message || '';\n      if (errorMessage.includes('429') || errorMessage.includes('503')) {\n        setError('The AI service is currently busy. Retrying automatically...');\n        setTimeout(() => setRetryCount(prev => prev + 1), 5000);\n      } else {\n        setError('An unexpected error occurred with the AI service.');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lowStockItems, retryCount]);\n\n  React.useEffect(() => {\n    fetchAlert();\n  }, [fetchAlert]);\n\n  if (lowStockItems.length === 0) {\n    return null; // Don't render anything if there are no low stock items\n  }\n\n  if (isLoading) {\n    return (\n      <Card>\n        <CardHeader>\n          <Skeleton className=\"h-6 w-48\" />\n          <Skeleton className=\"h-4 w-3/4\" />\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <Skeleton className=\"h-16 w-full\" />\n          <Skeleton className=\"h-24 w-full\" />\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (error) {\n    const isRetrying = error.includes('Retrying');\n    return (\n      <Card className=\"border-destructive/50 bg-destructive/5\">\n        <CardHeader>\n          <div className=\"flex items-center gap-3\">\n            <AlertTriangle className=\"h-6 w-6 text-destructive\" />\n            <CardTitle className=\"font-bold text-destructive\">Could not generate AI Alert</CardTitle>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className='flex items-start gap-2'>\n              {isRetrying && <RefreshCw className=\"h-4 w-4 text-destructive animate-spin mt-1\" />}\n              <p className=\"text-sm text-destructive\">{error}</p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!alert) {\n    return null;\n  }\n  \n  const getDisruptionBadgeVariant = (level: 'Low' | 'Medium' | 'High') => {\n    switch (level) {\n        case 'High': return 'destructive';\n        case 'Medium': return 'outline';\n        default: return 'secondary';\n    }\n  }\n\n  return (\n    <Card className=\"border-primary/50 bg-primary/5 h-full\">\n      <CardHeader>\n        <div className=\"flex items-center gap-3\">\n          <Zap className=\"h-6 w-6 text-primary\" />\n          <CardTitle className=\"font-bold text-primary\">AI-Powered Stock Analysis</CardTitle>\n          <Badge variant=\"default\" className=\"ml-auto\">AI-Powered</Badge>\n        </div>\n        <CardDescription className=\"pt-2 text-primary/90\">\n          Prioritized insights to prevent stockouts and revenue loss.\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        <div className=\"grid grid-cols-2 gap-4 text-center\">\n            <div className=\"rounded-lg bg-background p-3\">\n                <p className=\"text-sm font-medium text-muted-foreground\">Disruption Level</p>\n                <Badge variant={getDisruptionBadgeVariant(alert.overallDisruptionLevel)} className=\"mt-1 text-lg\">\n                    {alert.overallDisruptionLevel}\n                </Badge>\n            </div>\n            <div className=\"rounded-lg bg-background p-3\">\n                <p className=\"text-sm font-medium text-muted-foreground\">Revenue at Risk</p>\n                <p className=\"text-xl font-bold text-primary\">\n                    ${alert.potentialRevenueLoss.toLocaleString()}\n                </p>\n            </div>\n        </div>\n        \n        <div>\n            <h4 className=\"font-semibold text-foreground mb-2\">Suggested Actions (by priority)</h4>\n            <div className=\"w-full overflow-hidden rounded-md border bg-background\">\n                <Table>\n                    <TableHeader>\n                        <TableRow>\n                            <TableHead className=\"w-[30px] text-center\">#</TableHead>\n                            <TableHead>Item</TableHead>\n                            <TableHead>Action</TableHead>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                        {alert.suggestedActions.sort((a,b) => a.priority - b.priority).map((action, index) => (\n                            <TableRow key={`${action.itemName}-${index}`}>\n                                <TableCell className=\"text-center font-bold text-primary\">{action.priority}</TableCell>\n                                <TableCell className=\"font-medium\">{action.itemName}</TableCell>\n                                <TableCell>{action.action}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2828, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management_System/src/app/dashboard/items/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport { PageHeader } from \"@/components/page-header\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { ItemsTable } from \"@/components/dashboard/items-table\";\nimport type { Item, Category, SoldItem } from \"@/types\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { SoldItemsTable } from \"@/components/dashboard/sold-items-table\";\nimport { getItems, saveItems, getCategories, saveCategories, getSoldItems, saveSoldItems } from '@/lib/data';\nimport { v4 as uuidv4 } from 'uuid';\nimport { AIAlert } from \"@/components/dashboard/ai-alert\";\n\nexport default function ItemsPage() {\n  const [items, setItems] = React.useState<Item[]>([]);\n  const [categories, setCategories] = React.useState<Category[]>([]);\n  const [soldItems, setSoldItems] = React.useState<SoldItem[]>([]);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [_, setForceUpdate] = React.useState(0);\n\n  const getDeterministicItemData = (sku: string): Pick<Item, 'averageDailySales' | 'leadTimeDays'> => {\n    const skuSeed = sku.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n    const averageDailySales = (skuSeed % 19) + 1; \n    const leadTimeDays = (skuSeed % 9) + 2; \n    return {\n        averageDailySales,\n        leadTimeDays,\n    };\n  };\n\n  React.useEffect(() => {\n    setItems(getItems());\n    setCategories(getCategories());\n    setSoldItems(getSoldItems());\n    setIsLoading(false);\n  }, []);\n\n  const handleAddItem = (newItem: Omit<Item, \"id\" | \"averageDailySales\" | \"leadTimeDays\">) => {\n    const deterministicData = getDeterministicItemData(newItem.sku);\n    const newItemWithId: Item = { ...newItem, id: uuidv4(), ...deterministicData };\n    const updatedItems = [...items, newItemWithId];\n    setItems(updatedItems);\n    saveItems(updatedItems);\n\n    // Update category item count\n    const updatedCategories = categories.map(cat => \n        cat.id === newItem.categoryId ? { ...cat, itemCount: (cat.itemCount || 0) + 1 } : cat\n    );\n    setCategories(updatedCategories);\n    saveCategories(updatedCategories);\n  };\n\n  const handleEditItem = (updatedItem: Item) => {\n    const updatedItems = items.map((item) =>\n      item.id === updatedItem.id ? updatedItem : item\n    );\n    setItems(updatedItems);\n    saveItems(updatedItems);\n  };\n\n  const handleDeleteItem = (itemId: string) => {\n    const itemToDelete = items.find(item => item.id === itemId);\n    const updatedItems = items.filter((item) => item.id !== itemId);\n    setItems(updatedItems);\n    saveItems(updatedItems);\n\n    if (itemToDelete) {\n        const updatedCategories = categories.map(cat => \n            cat.id === itemToDelete.categoryId ? { ...cat, itemCount: Math.max(0, (cat.itemCount || 0) - 1) } : cat\n        );\n        setCategories(updatedCategories);\n        saveCategories(updatedCategories);\n    }\n  };\n\n  const handleSellItem = (itemToSell: Item, quantitySold: number) => {\n    // 1. Update the quantity of the original item\n    const updatedItems = items.map(item => \n      item.id === itemToSell.id ? { ...item, quantity: item.quantity - quantitySold } : item\n    );\n    setItems(updatedItems);\n    saveItems(updatedItems);\n\n    // 2. Add a record to the sold items list\n    const newSoldItem: SoldItem = {\n      id: uuidv4(),\n      itemId: itemToSell.id,\n      name: itemToSell.name,\n      sku: itemToSell.sku,\n      quantitySold: quantitySold,\n      price: itemToSell.price,\n      dateSold: new Date().toISOString(),\n    };\n    const updatedSoldItems = [...soldItems, newSoldItem];\n    setSoldItems(updatedSoldItems);\n    saveSoldItems(updatedSoldItems);\n    setForceUpdate(Date.now());\n  };\n\n  const lowStockItems = items.filter(\n    (item) => item.quantity <= item.reorderPoint\n  );\n  \n  if (isLoading) {\n    return (\n      <>\n        <PageHeader\n            title=\"Items\"\n            description=\"Manage your products and inventory.\"\n        />\n        <div className=\"space-y-4\">\n            <Skeleton className=\"h-10 w-64\" />\n            <div className=\"flex items-center py-4\">\n                <Skeleton className=\"h-10 w-full max-w-sm\" />\n                <Skeleton className=\"ml-auto h-10 w-28\" />\n            </div>\n            <Skeleton className=\"h-96 w-full rounded-md border\" />\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <PageHeader\n        title=\"Items\"\n        description=\"Manage your products and inventory.\"\n      />\n      <Tabs defaultValue=\"all\">\n        <TabsList>\n          <TabsTrigger value=\"all\">All Items</TabsTrigger>\n          <TabsTrigger value=\"low-stock\">Low Stock</TabsTrigger>\n          <TabsTrigger value=\"sold\">Sold Items</TabsTrigger>\n        </TabsList>\n        <TabsContent value=\"all\">\n          <ItemsTable\n            items={items}\n            categories={categories}\n            onAddItem={handleAddItem}\n            onEditItem={handleEditItem}\n            onDeleteItem={handleDeleteItem}\n            onSellItem={handleSellItem}\n            view=\"all\"\n          />\n        </TabsContent>\n        <TabsContent value=\"low-stock\">\n          <div className=\"space-y-4\">\n            <AIAlert lowStockItems={lowStockItems} />\n            <ItemsTable\n              items={lowStockItems}\n              categories={categories}\n              onAddItem={handleAddItem}\n              onEditItem={handleEditItem}\n              onDeleteItem={handleDeleteItem}\n              onSellItem={handleSellItem}\n              view=\"low-stock\"\n            />\n          </div>\n        </TabsContent>\n        <TabsContent value=\"sold\">\n          <SoldItemsTable items={soldItems} />\n        </TabsContent>\n      </Tabs>\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}