{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/stat-card.tsx"],"sourcesContent":["import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport type { LucideIcon } from 'lucide-react';\n\ntype StatCardProps = {\n  title: string;\n  value: string;\n  icon: LucideIcon;\n  description?: string;\n};\n\nexport function StatCard({ title, value, icon: Icon }: StatCardProps) {\n  return (\n    <Card>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-sm font-medium\">{title}</CardTitle>\n        <Icon className=\"h-4 w-4 text-muted-foreground\" />\n      </CardHeader>\n      <CardContent>\n        <div className=\"text-2xl font-bold\">{value}</div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAUO,SAAS,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,IAAI,EAAiB;IAClE,qBACE,8OAAC,gIAAA,CAAA,OAAI;;0BACH,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAuB;;;;;;kCAC5C,8OAAC;wBAAK,WAAU;;;;;;;;;;;;0BAElB,8OAAC,gIAAA,CAAA,cAAW;0BACV,cAAA,8OAAC;oBAAI,WAAU;8BAAsB;;;;;;;;;;;;;;;;;AAI7C","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 445, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/stock-chart.tsx"],"sourcesContent":["'use client';\n\nimport { Bar, BarChart, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n} from '@/components/ui/card';\nimport {\n  ChartContainer,\n  ChartTooltipContent,\n} from '@/components/ui/chart';\nimport type { Item } from '@/types';\n\ntype StockChartProps = {\n  items: Item[];\n};\n\nexport function StockChart({ items }: StockChartProps) {\n  const chartData = items.slice(0, 10).map(item => ({\n    name: item.name,\n    quantity: item.quantity,\n  }));\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"font-bold\">Stock Levels</CardTitle>\n        <CardDescription>Top 10 items by quantity</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer config={{}} className=\"h-64 w-full\">\n          <BarChart data={chartData} margin={{ top: 5, right: 20, left: -10, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n            <XAxis\n              dataKey=\"name\"\n              tickLine={false}\n              axisLine={false}\n              tickMargin={8}\n              tickFormatter={(value) => value.slice(0, 10) + (value.length > 10 ? '...' : '')}\n            />\n            <YAxis />\n            <Tooltip\n              cursor={{ fill: 'hsl(var(--muted))' }}\n              content={<ChartTooltipContent />}\n            />\n            <Bar dataKey=\"quantity\" fill=\"hsl(var(--primary))\" radius={4} />\n          </BarChart>\n        </ChartContainer>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAVA;;;;;AAoBO,SAAS,WAAW,EAAE,KAAK,EAAmB;IACnD,MAAM,YAAY,MAAM,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,CAAA,OAAQ,CAAC;YAChD,MAAM,KAAK,IAAI;YACf,UAAU,KAAK,QAAQ;QACzB,CAAC;IAED,qBACE,8OAAC,gIAAA,CAAA,OAAI;;0BACH,8OAAC,gIAAA,CAAA,aAAU;;kCACT,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAY;;;;;;kCACjC,8OAAC,gIAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAEnB,8OAAC,gIAAA,CAAA,cAAW;0BACV,cAAA,8OAAC,iIAAA,CAAA,iBAAc;oBAAC,QAAQ,CAAC;oBAAG,WAAU;8BACpC,cAAA,8OAAC,oJAAA,CAAA,WAAQ;wBAAC,MAAM;wBAAW,QAAQ;4BAAE,KAAK;4BAAG,OAAO;4BAAI,MAAM,CAAC;4BAAI,QAAQ;wBAAE;;0CAC3E,8OAAC,6JAAA,CAAA,gBAAa;gCAAC,iBAAgB;gCAAM,UAAU;;;;;;0CAC/C,8OAAC,qJAAA,CAAA,QAAK;gCACJ,SAAQ;gCACR,UAAU;gCACV,UAAU;gCACV,YAAY;gCACZ,eAAe,CAAC,QAAU,MAAM,KAAK,CAAC,GAAG,MAAM,CAAC,MAAM,MAAM,GAAG,KAAK,QAAQ,EAAE;;;;;;0CAEhF,8OAAC,qJAAA,CAAA,QAAK;;;;;0CACN,8OAAC,uJAAA,CAAA,UAAO;gCACN,QAAQ;oCAAE,MAAM;gCAAoB;gCACpC,uBAAS,8OAAC,iIAAA,CAAA,sBAAmB;;;;;;;;;;0CAE/B,8OAAC,mJAAA,CAAA,MAAG;gCAAC,SAAQ;gCAAW,MAAK;gCAAsB,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMvE","debugId":null}},
    {"offset": {"line": 581, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-stock-alert.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview This file defines a Genkit flow for generating intelligent stock alerts.\n *\n * - generateStockAlert - A function that generates a stock alert based on provided data.\n * - GenerateStockAlertInput - The input type for the generateStockAlert function.\n * - GenerateStockAlertOutput - The return type for the generateStockAlert function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateStockAlertInputSchema = z.object({\n  lowStockItems: z.array(\n    z.object({\n      itemId: z.string().describe('The unique identifier for the item.'),\n      itemName: z.string().describe('The name of the item.'),\n      currentQuantity: z.number().describe('The current quantity in stock.'),\n      reorderPoint: z.number().describe('The reorder point for the item.'),\n      averageDailySales: z\n        .number()\n        .describe('The average daily sales volume of the item.'),\n      sellingPrice: z.number().describe('The selling price of the item.'),\n      supplierName: z.string().describe('The name of the supplier.'),\n      leadTimeDays: z.number().describe('The lead time in days from the supplier.'),\n    })\n  ).describe('An array of items with low stock levels.'),\n});\nexport type GenerateStockAlertInput = z.infer<typeof GenerateStockAlertInputSchema>;\n\nconst GenerateStockAlertOutputSchema = z.object({\n  potentialRevenueLoss: z.number().describe('The total estimated potential revenue loss in USD for all low-stock items if they are not restocked.'),\n  overallDisruptionLevel: z.enum([\"Low\", \"Medium\", \"High\"]).describe('An overall assessment of the disruption level to the business (Low, Medium, or High).'),\n  suggestedActions: z.array(z.object({\n    itemName: z.string().describe('The name of the item requiring action.'),\n    action: z.string().describe('The suggested course of action for this specific item.'),\n    priority: z.number().int().describe('The priority of the action, where 1 is the highest priority.')\n  })).describe('A prioritized list of suggested actions to mitigate the stock issues.'),\n});\nexport type GenerateStockAlertOutput = z.infer<typeof GenerateStockAlertOutputSchema>;\n\nexport async function generateStockAlert(input: GenerateStockAlertInput): Promise<GenerateStockAlertOutput> {\n  return generateStockAlertFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateStockAlertPrompt',\n  input: {schema: GenerateStockAlertInputSchema},\n  output: {schema: GenerateStockAlertOutputSchema},\n  prompt: `You are a world-class AI inventory management strategist. Your task is to analyze a list of low-stock items and provide a highly advanced and actionable alert.\n\n  Analyze the provided data to generate a structured alert with the following components:\n\n  1.  **Potential Revenue Loss**: Calculate the total estimated revenue at risk if all these items go completely out of stock before they can be replenished. Base this on the remaining stock, average daily sales, and selling price.\n\n  2.  **Overall Disruption Level**: Assess the overall business disruption. Consider the number of critical items, how quickly they are selling out, and supplier lead times. Categorize this as 'Low', 'Medium', or 'High'. A few fast-selling items with long lead times could be a 'High' disruption, even if the total revenue loss is moderate.\n\n  3.  **Suggested Courses of Action**: Provide a list of clear, prioritized, and actionable steps for the inventory manager. For each action, specify the item, the recommended action (e.g., \"Immediate re-order,\" \"Expedite shipment,\" \"Contact supplier\"), and a priority level (1 being the most urgent). Prioritize actions based on which items will stock out the soonest (days until stockout = current quantity / average daily sales) and their lead time. Items that will stock out before the supplier can deliver should be the highest priority.\n\n  Here is the data for the low-stock items:\n\n  {{#each lowStockItems}}\n  - Item: {{itemName}} (ID: {{itemId}})\n    - Current Quantity: {{currentQuantity}}\n    - Re-order Point: {{reorderPoint}}\n    - Avg. Daily Sales: {{averageDailySales}}\n    - Selling Price: $ {{sellingPrice}}\n    - Supplier: {{supplierName}}\n    - Lead Time: {{leadTimeDays}} days\n  {{/each}}\n\n  Based on this data, generate the structured stock alert.\n  `,\n});\n\nconst generateStockAlertFlow = ai.defineFlow(\n  {\n    name: 'generateStockAlertFlow',\n    inputSchema: GenerateStockAlertInputSchema,\n    outputSchema: GenerateStockAlertOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IA2CsB,qBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 594, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 636, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 660, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 770, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/ai-alert.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from 'react';\nimport { generateStockAlert, type GenerateStockAlertOutput } from '@/ai/flows/generate-stock-alert';\nimport type { Item } from '@/types';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { AlertTriangle, TrendingUp, DollarSign, Zap } from 'lucide-react';\nimport { Badge } from '@/components/ui/badge';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '../ui/table';\n\ntype AIAlertProps = {\n  lowStockItems: Item[];\n};\n\nexport function AIAlert({ lowStockItems }: AIAlertProps) {\n  const [alert, setAlert] = React.useState<GenerateStockAlertOutput | null>(null);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [error, setError] = React.useState<string | null>(null);\n\n  React.useEffect(() => {\n    const fetchAlert = async () => {\n      if (lowStockItems.length === 0) {\n        setIsLoading(false);\n        setAlert(null);\n        return;\n      }\n\n      setIsLoading(true);\n      setError(null);\n      const alertInput = {\n        lowStockItems: lowStockItems.map(item => ({\n          itemId: item.id,\n          itemName: item.name,\n          currentQuantity: item.quantity,\n          reorderPoint: item.reorderPoint,\n          averageDailySales: item.averageDailySales,\n          sellingPrice: item.price,\n          supplierName: item.supplierName,\n          leadTimeDays: item.leadTimeDays,\n        })),\n      };\n\n      try {\n        const result = await generateStockAlert(alertInput);\n        setAlert(result);\n      } catch (e) {\n        console.error('Error generating AI stock alert:', e);\n        setError('There was an issue with the AI service. Please try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchAlert();\n  }, [lowStockItems]);\n\n  if (lowStockItems.length === 0) {\n    return null; // Don't render anything if there are no low stock items\n  }\n\n  if (isLoading) {\n    return (\n      <Card>\n        <CardHeader>\n          <Skeleton className=\"h-6 w-48\" />\n          <Skeleton className=\"h-4 w-3/4\" />\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <Skeleton className=\"h-16 w-full\" />\n          <Skeleton className=\"h-24 w-full\" />\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (error) {\n    return (\n      <Card className=\"border-destructive/50 bg-destructive/5\">\n        <CardHeader>\n          <div className=\"flex items-center gap-3\">\n            <AlertTriangle className=\"h-6 w-6 text-destructive\" />\n            <CardTitle className=\"font-bold text-destructive\">Could not generate AI Alert</CardTitle>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-sm text-destructive\">{error}</p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!alert) {\n    return null;\n  }\n  \n  const getDisruptionBadgeVariant = (level: 'Low' | 'Medium' | 'High') => {\n    switch (level) {\n        case 'High': return 'destructive';\n        case 'Medium': return 'outline';\n        default: return 'secondary';\n    }\n  }\n\n  return (\n    <Card className=\"border-primary/50 bg-primary/5 h-full\">\n      <CardHeader>\n        <div className=\"flex items-center gap-3\">\n          <Zap className=\"h-6 w-6 text-primary\" />\n          <CardTitle className=\"font-bold text-primary\">AI - Powered Stock Analysis</CardTitle>\n          <Badge variant=\"default\" className=\"ml-auto\">AI-Powered</Badge>\n        </div>\n        <CardDescription className=\"pt-2 text-primary/90\">\n          Prioritized insights to prevent stockouts and revenue loss.\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        <div className=\"grid grid-cols-2 gap-4 text-center\">\n            <div className=\"rounded-lg bg-background p-3\">\n                <p className=\"text-sm font-medium text-muted-foreground\">Disruption Level</p>\n                <Badge variant={getDisruptionBadgeVariant(alert.overallDisruptionLevel)} className=\"mt-1 text-lg\">\n                    {alert.overallDisruptionLevel}\n                </Badge>\n            </div>\n            <div className=\"rounded-lg bg-background p-3\">\n                <p className=\"text-sm font-medium text-muted-foreground\">Revenue at Risk</p>\n                <p className=\"text-xl font-bold text-primary\">\n                    ${alert.potentialRevenueLoss.toLocaleString()}\n                </p>\n            </div>\n        </div>\n        \n        <div>\n            <h4 className=\"font-semibold text-foreground mb-2\">Suggested Actions (by priority)</h4>\n            <div className=\"w-full overflow-hidden rounded-md border bg-background\">\n                <Table>\n                    <TableHeader>\n                        <TableRow>\n                            <TableHead className=\"w-[30px] text-center\">#</TableHead>\n                            <TableHead>Item</TableHead>\n                            <TableHead>Action</TableHead>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                        {alert.suggestedActions.sort((a,b) => a.priority - b.priority).map((action, index) => (\n                            <TableRow key={`${action.itemName}-${index}`}>\n                                <TableCell className=\"text-center font-bold text-primary\">{action.priority}</TableCell>\n                                <TableCell className=\"font-medium\">{action.itemName}</TableCell>\n                                <TableCell>{action.action}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1197, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/page-header.tsx"],"sourcesContent":["type PageHeaderProps = {\n  title: string;\n  description?: string;\n  children?: React.ReactNode;\n};\n\nexport function PageHeader({ title, description, children }: PageHeaderProps) {\n  return (\n    <div className=\"flex flex-col items-start justify-between gap-4 md:flex-row md:items-center\">\n      <div className=\"grid gap-1\">\n        <h1 className=\"text-2xl font-bold tracking-tight md:text-3xl\">{title}</h1>\n        {description && (\n          <p className=\"text-muted-foreground\">{description}</p>\n        )}\n      </div>\n      {children && <div className=\"flex shrink-0 gap-2\">{children}</div>}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAMO,SAAS,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAmB;IAC1E,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAiD;;;;;;oBAC9D,6BACC,8OAAC;wBAAE,WAAU;kCAAyB;;;;;;;;;;;;YAGzC,0BAAY,8OAAC;gBAAI,WAAU;0BAAuB;;;;;;;;;;;;AAGzD","debugId":null}},
    {"offset": {"line": 1252, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from 'react';\nimport { Suspense } from 'react';\nimport { Package, Shapes, DollarSign, PackageX } from 'lucide-react';\nimport type { Item, Category } from '@/types';\nimport { StatCard } from '@/components/dashboard/stat-card';\nimport { StockChart } from '@/components/dashboard/stock-chart';\nimport { AIAlert } from '@/components/dashboard/ai-alert';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { PageHeader } from '@/components/page-header';\n\nexport default function DashboardPage() {\n  const [items, setItems] = React.useState<Item[]>([]);\n  const [categories, setCategories] = React.useState<Category[]>([]);\n  const [isClient, setIsClient] = React.useState(false);\n\n  const loadData = React.useCallback(() => {\n    try {\n      const storedItems = localStorage.getItem('inventory-manager-items');\n      if (storedItems) {\n        setItems(JSON.parse(storedItems));\n      }\n      const storedCategories = localStorage.getItem('inventory-manager-categories');\n      if (storedCategories) {\n        setCategories(JSON.parse(storedCategories));\n      }\n    } catch (error) {\n        console.error(\"Failed to parse from localStorage\", error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    setIsClient(true);\n    loadData();\n\n    const handleStorageChange = (event: StorageEvent) => {\n        if (event.key === 'inventory-manager-items' || event.key === 'inventory-manager-categories') {\n            loadData();\n        }\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n    return () => {\n        window.removeEventListener('storage', handleStorageChange);\n    };\n  }, [loadData]);\n\n  const totalItems = items.length;\n  const lowStockItemsCount = items.filter(item => item.quantity === 0).length;\n  const totalValue = items.reduce((sum, item) => sum + item.quantity * item.price, 0);\n  const categoryCount = categories.length;\n\n  const lowStockForAI = items.filter(item => item.quantity <= item.reorderPoint);\n\n  if (!isClient) {\n    return (\n      <>\n        <PageHeader title=\"Dashboard\" description=\"An overview of your inventory.\" />\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n          <Skeleton className=\"h-24\" />\n          <Skeleton className=\"h-24\" />\n          <Skeleton className=\"h-24\" />\n          <Skeleton className=\"h-24\" />\n        </div>\n        <div className=\"grid gap-4 md:grid-cols-7\">\n          <div className=\"md:col-span-4\">\n              <Skeleton className=\"h-80\" />\n          </div>\n          <div className=\"md:col-span-3\">\n            <Skeleton className=\"h-full w-full\" />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <PageHeader title=\"Dashboard\" description=\"An overview of your inventory.\" />\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        <StatCard\n          title=\"Total Items\"\n          value={totalItems.toLocaleString()}\n          icon={Package}\n        />\n        <StatCard\n          title=\"Low Stock Items\"\n          value={lowStockItemsCount.toString()}\n          icon={PackageX}\n        />\n        <StatCard\n          title=\"Inventory Value\"\n          value={`$${totalValue.toLocaleString('en-US', {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          })}`}\n          icon={DollarSign}\n        />\n        <StatCard\n          title=\"Categories\"\n          value={categoryCount.toString()}\n          icon={Shapes}\n        />\n      </div>\n      <div className=\"grid gap-4 md:grid-cols-7\">\n        <div className=\"md:col-span-4\">\n            <StockChart items={items} />\n        </div>\n        <div className=\"md:col-span-3\">\n          <Suspense fallback={<Skeleton className=\"h-full w-full\" />}>\n            <AIAlert lowStockItems={lowStockForAI} />\n          </Suspense>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAVA;;;;;;;;;;AAYe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAU,EAAE;IACnD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAc,EAAE;IACjE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAE;IAE/C,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,cAAiB,AAAD,EAAE;QACjC,IAAI;YACF,MAAM,cAAc,aAAa,OAAO,CAAC;YACzC,IAAI,aAAa;gBACf,SAAS,KAAK,KAAK,CAAC;YACtB;YACA,MAAM,mBAAmB,aAAa,OAAO,CAAC;YAC9C,IAAI,kBAAkB;gBACpB,cAAc,KAAK,KAAK,CAAC;YAC3B;QACF,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,qCAAqC;QACvD;IACF,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAe,AAAD,EAAE;QACd,YAAY;QACZ;QAEA,MAAM,sBAAsB,CAAC;YACzB,IAAI,MAAM,GAAG,KAAK,6BAA6B,MAAM,GAAG,KAAK,gCAAgC;gBACzF;YACJ;QACJ;QAEA,OAAO,gBAAgB,CAAC,WAAW;QACnC,OAAO;YACH,OAAO,mBAAmB,CAAC,WAAW;QAC1C;IACF,GAAG;QAAC;KAAS;IAEb,MAAM,aAAa,MAAM,MAAM;IAC/B,MAAM,qBAAqB,MAAM,MAAM,CAAC,CAAA,OAAQ,KAAK,QAAQ,KAAK,GAAG,MAAM;IAC3E,MAAM,aAAa,MAAM,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,QAAQ,GAAG,KAAK,KAAK,EAAE;IACjF,MAAM,gBAAgB,WAAW,MAAM;IAEvC,MAAM,gBAAgB,MAAM,MAAM,CAAC,CAAA,OAAQ,KAAK,QAAQ,IAAI,KAAK,YAAY;IAE7E,IAAI,CAAC,UAAU;QACb,qBACE;;8BACE,8OAAC,oIAAA,CAAA,aAAU;oBAAC,OAAM;oBAAY,aAAY;;;;;;8BAC1C,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,oIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,8OAAC,oIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,8OAAC,oIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,8OAAC,oIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;;;;;;;8BAEtB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;;;;;;sCAExB,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;;;;;;;;;;;;;;IAK9B;IAEA,qBACE;;0BACE,8OAAC,oIAAA,CAAA,aAAU;gBAAC,OAAM;gBAAY,aAAY;;;;;;0BAC1C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,+IAAA,CAAA,WAAQ;wBACP,OAAM;wBACN,OAAO,WAAW,cAAc;wBAChC,MAAM,wMAAA,CAAA,UAAO;;;;;;kCAEf,8OAAC,+IAAA,CAAA,WAAQ;wBACP,OAAM;wBACN,OAAO,mBAAmB,QAAQ;wBAClC,MAAM,8MAAA,CAAA,WAAQ;;;;;;kCAEhB,8OAAC,+IAAA,CAAA,WAAQ;wBACP,OAAM;wBACN,OAAO,CAAC,CAAC,EAAE,WAAW,cAAc,CAAC,SAAS;4BAC5C,uBAAuB;4BACvB,uBAAuB;wBACzB,IAAI;wBACJ,MAAM,kNAAA,CAAA,aAAU;;;;;;kCAElB,8OAAC,+IAAA,CAAA,WAAQ;wBACP,OAAM;wBACN,OAAO,cAAc,QAAQ;wBAC7B,MAAM,sMAAA,CAAA,SAAM;;;;;;;;;;;;0BAGhB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC,iJAAA,CAAA,aAAU;4BAAC,OAAO;;;;;;;;;;;kCAEvB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,qMAAA,CAAA,WAAQ;4BAAC,wBAAU,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;sCACtC,cAAA,8OAAC,8IAAA,CAAA,UAAO;gCAAC,eAAe;;;;;;;;;;;;;;;;;;;;;;;;AAMpC","debugId":null}}]
}