{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-stock-alert.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview This file defines a Genkit flow for generating intelligent stock alerts.\n *\n * - generateStockAlert - A function that generates a stock alert based on provided data.\n * - GenerateStockAlertInput - The input type for the generateStockAlert function.\n * - GenerateStockAlertOutput - The return type for the generateStockAlert function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateStockAlertInputSchema = z.object({\n  lowStockItems: z.array(\n    z.object({\n      itemId: z.string().describe('The unique identifier for the item.'),\n      itemName: z.string().describe('The name of the item.'),\n      currentQuantity: z.number().describe('The current quantity in stock.'),\n      reorderPoint: z.number().describe('The reorder point for the item.'),\n      averageDailySales: z\n        .number()\n        .describe('The average daily sales volume of the item.'),\n      sellingPrice: z.number().describe('The selling price of the item.'),\n      supplierName: z.string().describe('The name of the supplier.'),\n      leadTimeDays: z.number().describe('The lead time in days from the supplier.'),\n    })\n  ).describe('An array of items with low stock levels.'),\n});\nexport type GenerateStockAlertInput = z.infer<typeof GenerateStockAlertInputSchema>;\n\nconst GenerateStockAlertOutputSchema = z.object({\n  alertSummary: z.string().describe('A summary of the stock alert including potential revenue loss, disruption level, and suggested courses of action.'),\n});\nexport type GenerateStockAlertOutput = z.infer<typeof GenerateStockAlertOutputSchema>;\n\nexport async function generateStockAlert(input: GenerateStockAlertInput): Promise<GenerateStockAlertOutput> {\n  return generateStockAlertFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateStockAlertPrompt',\n  input: {schema: GenerateStockAlertInputSchema},\n  output: {schema: GenerateStockAlertOutputSchema},\n  prompt: `You are an AI assistant designed to generate stock alerts for inventory managers.\n\n  You will receive data about items with low stock levels. Your goal is to analyze this data and generate a concise alert summary that includes the following:\n\n  - Potential Revenue Loss: Estimate the potential revenue loss if the items go out of stock, based on average daily sales and selling price.\n  - Disruption Level: Assess the disruption level based on how critical the item is and how quickly it's selling.\n  - Suggested Courses of Action: Provide clear, actionable steps the manager should take, considering lead times and reorder points.\n\n  Here's the data about the low stock items:\n\n  {{#each lowStockItems}}\n  Item ID: {{itemId}}\n  Item Name: {{itemName}}\n  Current Quantity: {{currentQuantity}}\n  Reorder Point: {{reorderPoint}}\n  Average Daily Sales: {{averageDailySales}}\n  Selling Price: {{sellingPrice}}\n  Supplier Name: {{supplierName}}\n  Lead Time (Days): {{leadTimeDays}}\n  \\n\n  {{/each}}\n\n  Based on this data, generate a stock alert summary.\n  `,\n});\n\nconst generateStockAlertFlow = ai.defineFlow(\n  {\n    name: 'generateStockAlertFlow',\n    inputSchema: GenerateStockAlertInputSchema,\n    outputSchema: GenerateStockAlertOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,gCAAgC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7C,eAAe,uIAAA,CAAA,IAAC,CAAC,KAAK,CACpB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACP,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC5B,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC9B,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QACrC,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QAClC,mBAAmB,uIAAA,CAAA,IAAC,CACjB,MAAM,GACN,QAAQ,CAAC;QACZ,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QAClC,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QAClC,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACpC,IACA,QAAQ,CAAC;AACb;AAGA,MAAM,iCAAiC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9C,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACpC;AAGO,eAAe,mBAAmB,KAA8B;IACrE,OAAO,uBAAuB;AAChC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA6B;IAC7C,QAAQ;QAAC,QAAQ;IAA8B;IAC/C,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;;EAuBT,CAAC;AACH;AAEA,MAAM,yBAAyB,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC1C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA3CoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/dashboard/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateStockAlert as '40b8de11c9e8b2966b948d75a1a7f0e7449fff054a'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 375, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data.ts"],"sourcesContent":["import type { Category, Item } from \"@/types\";\n\nexport const categories: Category[] = [];\n\nexport const items: Item[] = [];\n"],"names":[],"mappings":";;;;AAEO,MAAM,aAAyB,EAAE;AAEjC,MAAM,QAAgB,EAAE","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 484, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/stat-card.tsx"],"sourcesContent":["import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport type { LucideIcon } from 'lucide-react';\n\ntype StatCardProps = {\n  title: string;\n  value: string;\n  icon: LucideIcon;\n  description?: string;\n};\n\nexport function StatCard({ title, value, icon: Icon }: StatCardProps) {\n  return (\n    <Card>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-sm font-medium\">{title}</CardTitle>\n        <Icon className=\"h-4 w-4 text-muted-foreground\" />\n      </CardHeader>\n      <CardContent>\n        <div className=\"text-2xl font-bold\">{value}</div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAUO,SAAS,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,IAAI,EAAiB;IAClE,qBACE,8OAAC,gIAAA,CAAA,OAAI;;0BACH,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAuB;;;;;;kCAC5C,8OAAC;wBAAK,WAAU;;;;;;;;;;;;0BAElB,8OAAC,gIAAA,CAAA,cAAW;0BACV,cAAA,8OAAC;oBAAI,WAAU;8BAAsB;;;;;;;;;;;;;;;;;AAI7C","debugId":null}},
    {"offset": {"line": 545, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/stock-chart.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const StockChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call StockChart() from the server but StockChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/stock-chart.tsx <module evaluation>\",\n    \"StockChart\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,0EACA","debugId":null}},
    {"offset": {"line": 559, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/stock-chart.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const StockChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call StockChart() from the server but StockChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/stock-chart.tsx\",\n    \"StockChart\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,sDACA","debugId":null}},
    {"offset": {"line": 573, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 583, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 625, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/ai-alert.tsx"],"sourcesContent":["import { generateStockAlert } from '@/ai/flows/generate-stock-alert';\nimport type { Item } from '@/types';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { AlertTriangle } from 'lucide-react';\nimport { Badge } from '@/components/ui/badge';\n\ntype AIAlertProps = {\n  lowStockItems: Item[];\n};\n\nexport async function AIAlert({ lowStockItems }: AIAlertProps) {\n  if (lowStockItems.length === 0) {\n    return null;\n  }\n\n  const alertInput = {\n    lowStockItems: lowStockItems.map(item => ({\n      itemId: item.id,\n      itemName: item.name,\n      currentQuantity: item.quantity,\n      reorderPoint: item.reorderPoint,\n      averageDailySales: item.averageDailySales,\n      sellingPrice: item.price,\n      supplierName: item.supplierName,\n      leadTimeDays: item.leadTimeDays,\n    })),\n  };\n\n  try {\n    const { alertSummary } = await generateStockAlert(alertInput);\n\n    return (\n      <Card className=\"border-primary/50 bg-primary/5\">\n        <CardHeader>\n            <div className=\"flex items-center gap-3\">\n                <AlertTriangle className=\"h-6 w-6 text-primary\" />\n                <CardTitle className=\"font-bold text-primary\">Intelligent Stock Alert</CardTitle>\n                <Badge variant=\"default\" className=\"ml-auto\">AI-Powered</Badge>\n            </div>\n          <CardDescription className=\"pt-2 text-primary/90\">\n            AI-analysis of current low-stock items.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-sm whitespace-pre-wrap\">{alertSummary}</p>\n        </CardContent>\n      </Card>\n    );\n  } catch (error) {\n    console.error('Error generating AI stock alert:', error);\n    return (\n        <Card className=\"border-destructive/50 bg-destructive/5\">\n            <CardHeader>\n                <div className=\"flex items-center gap-3\">\n                    <AlertTriangle className=\"h-6 w-6 text-destructive\" />\n                    <CardTitle className=\"font-bold text-destructive\">Could not generate AI Alert</CardTitle>\n                </div>\n            </CardHeader>\n            <CardContent>\n                <p className=\"text-sm text-destructive\">There was an issue with the AI service. Please try again later.</p>\n            </CardContent>\n        </Card>\n    )\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;AACA;;;;;;AAMO,eAAe,QAAQ,EAAE,aAAa,EAAgB;IAC3D,IAAI,cAAc,MAAM,KAAK,GAAG;QAC9B,OAAO;IACT;IAEA,MAAM,aAAa;QACjB,eAAe,cAAc,GAAG,CAAC,CAAA,OAAQ,CAAC;gBACxC,QAAQ,KAAK,EAAE;gBACf,UAAU,KAAK,IAAI;gBACnB,iBAAiB,KAAK,QAAQ;gBAC9B,cAAc,KAAK,YAAY;gBAC/B,mBAAmB,KAAK,iBAAiB;gBACzC,cAAc,KAAK,KAAK;gBACxB,cAAc,KAAK,YAAY;gBAC/B,cAAc,KAAK,YAAY;YACjC,CAAC;IACH;IAEA,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,MAAM,CAAA,GAAA,gJAAA,CAAA,qBAAkB,AAAD,EAAE;QAElD,qBACE,8OAAC,gIAAA,CAAA,OAAI;YAAC,WAAU;;8BACd,8OAAC,gIAAA,CAAA,aAAU;;sCACP,8OAAC;4BAAI,WAAU;;8CACX,8OAAC,wNAAA,CAAA,gBAAa;oCAAC,WAAU;;;;;;8CACzB,8OAAC,gIAAA,CAAA,YAAS;oCAAC,WAAU;8CAAyB;;;;;;8CAC9C,8OAAC,iIAAA,CAAA,QAAK;oCAAC,SAAQ;oCAAU,WAAU;8CAAU;;;;;;;;;;;;sCAEnD,8OAAC,gIAAA,CAAA,kBAAe;4BAAC,WAAU;sCAAuB;;;;;;;;;;;;8BAIpD,8OAAC,gIAAA,CAAA,cAAW;8BACV,cAAA,8OAAC;wBAAE,WAAU;kCAA+B;;;;;;;;;;;;;;;;;IAIpD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;QAClD,qBACI,8OAAC,gIAAA,CAAA,OAAI;YAAC,WAAU;;8BACZ,8OAAC,gIAAA,CAAA,aAAU;8BACP,cAAA,8OAAC;wBAAI,WAAU;;0CACX,8OAAC,wNAAA,CAAA,gBAAa;gCAAC,WAAU;;;;;;0CACzB,8OAAC,gIAAA,CAAA,YAAS;gCAAC,WAAU;0CAA6B;;;;;;;;;;;;;;;;;8BAG1D,8OAAC,gIAAA,CAAA,cAAW;8BACR,cAAA,8OAAC;wBAAE,WAAU;kCAA2B;;;;;;;;;;;;;;;;;IAItD;AACF","debugId":null}},
    {"offset": {"line": 791, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 815, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/page-header.tsx"],"sourcesContent":["type PageHeaderProps = {\n  title: string;\n  description?: string;\n  children?: React.ReactNode;\n};\n\nexport function PageHeader({ title, description, children }: PageHeaderProps) {\n  return (\n    <div className=\"flex flex-col items-start justify-between gap-4 md:flex-row md:items-center\">\n      <div className=\"grid gap-1\">\n        <h1 className=\"text-2xl font-bold tracking-tight md:text-3xl\">{title}</h1>\n        {description && (\n          <p className=\"text-muted-foreground\">{description}</p>\n        )}\n      </div>\n      {children && <div className=\"flex shrink-0 gap-2\">{children}</div>}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAMO,SAAS,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAmB;IAC1E,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAiD;;;;;;oBAC9D,6BACC,8OAAC;wBAAE,WAAU;kCAAyB;;;;;;;;;;;;YAGzC,0BAAY,8OAAC;gBAAI,WAAU;0BAAuB;;;;;;;;;;;;AAGzD","debugId":null}},
    {"offset": {"line": 870, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/page.tsx"],"sourcesContent":["import { Suspense } from 'react';\nimport { Package, Shapes, DollarSign, PackageX } from 'lucide-react';\nimport { categories, items } from '@/lib/data';\nimport { StatCard } from '@/components/dashboard/stat-card';\nimport { StockChart } from '@/components/dashboard/stock-chart';\nimport { AIAlert } from '@/components/dashboard/ai-alert';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { PageHeader } from '@/components/page-header';\n\nexport default function DashboardPage() {\n  const totalItems = items.reduce((sum, item) => sum + item.quantity, 0);\n  const lowStockItemsCount = items.filter(item => item.quantity <= item.reorderPoint).length;\n  const totalValue = items.reduce((sum, item) => sum + item.quantity * item.price, 0);\n  const categoryCount = categories.length;\n\n  const lowStockForAI = items.filter(item => item.quantity <= item.reorderPoint);\n\n  return (\n    <>\n      <PageHeader title=\"Dashboard\" description=\"An overview of your inventory.\" />\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        <StatCard\n          title=\"Total Items\"\n          value={totalItems.toLocaleString()}\n          icon={Package}\n        />\n        <StatCard\n          title=\"Low Stock Items\"\n          value={lowStockItemsCount.toString()}\n          icon={PackageX}\n        />\n        <StatCard\n          title=\"Inventory Value\"\n          value={`$${totalValue.toLocaleString('en-US', {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          })}`}\n          icon={DollarSign}\n        />\n        <StatCard\n          title=\"Categories\"\n          value={categoryCount.toString()}\n          icon={Shapes}\n        />\n      </div>\n      <div className=\"grid gap-4 md:grid-cols-7\">\n        <div className=\"md:col-span-4\">\n            <StockChart items={items} />\n        </div>\n        <div className=\"md:col-span-3\">\n          <Suspense fallback={<Skeleton className=\"h-full w-full\" />}>\n            <AIAlert lowStockItems={lowStockForAI} />\n          </Suspense>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAEe,SAAS;IACtB,MAAM,aAAa,kHAAA,CAAA,QAAK,CAAC,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,QAAQ,EAAE;IACpE,MAAM,qBAAqB,kHAAA,CAAA,QAAK,CAAC,MAAM,CAAC,CAAA,OAAQ,KAAK,QAAQ,IAAI,KAAK,YAAY,EAAE,MAAM;IAC1F,MAAM,aAAa,kHAAA,CAAA,QAAK,CAAC,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,QAAQ,GAAG,KAAK,KAAK,EAAE;IACjF,MAAM,gBAAgB,kHAAA,CAAA,aAAU,CAAC,MAAM;IAEvC,MAAM,gBAAgB,kHAAA,CAAA,QAAK,CAAC,MAAM,CAAC,CAAA,OAAQ,KAAK,QAAQ,IAAI,KAAK,YAAY;IAE7E,qBACE;;0BACE,8OAAC,oIAAA,CAAA,aAAU;gBAAC,OAAM;gBAAY,aAAY;;;;;;0BAC1C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,+IAAA,CAAA,WAAQ;wBACP,OAAM;wBACN,OAAO,WAAW,cAAc;wBAChC,MAAM,wMAAA,CAAA,UAAO;;;;;;kCAEf,8OAAC,+IAAA,CAAA,WAAQ;wBACP,OAAM;wBACN,OAAO,mBAAmB,QAAQ;wBAClC,MAAM,8MAAA,CAAA,WAAQ;;;;;;kCAEhB,8OAAC,+IAAA,CAAA,WAAQ;wBACP,OAAM;wBACN,OAAO,CAAC,CAAC,EAAE,WAAW,cAAc,CAAC,SAAS;4BAC5C,uBAAuB;4BACvB,uBAAuB;wBACzB,IAAI;wBACJ,MAAM,kNAAA,CAAA,aAAU;;;;;;kCAElB,8OAAC,+IAAA,CAAA,WAAQ;wBACP,OAAM;wBACN,OAAO,cAAc,QAAQ;wBAC7B,MAAM,sMAAA,CAAA,SAAM;;;;;;;;;;;;0BAGhB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC,iJAAA,CAAA,aAAU;4BAAC,OAAO,kHAAA,CAAA,QAAK;;;;;;;;;;;kCAE5B,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,qMAAA,CAAA,WAAQ;4BAAC,wBAAU,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;sCACtC,cAAA,8OAAC,8IAAA,CAAA,UAAO;gCAAC,eAAe;;;;;;;;;;;;;;;;;;;;;;;;AAMpC","debugId":null}}]
}