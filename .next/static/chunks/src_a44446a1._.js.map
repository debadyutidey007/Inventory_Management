{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/stat-card.tsx"],"sourcesContent":["import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport type { LucideIcon } from 'lucide-react';\n\ntype StatCardProps = {\n  title: string;\n  value: string;\n  icon: LucideIcon;\n  description?: string;\n};\n\nexport function StatCard({ title, value, icon: Icon }: StatCardProps) {\n  return (\n    <Card>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-sm font-medium\">{title}</CardTitle>\n        <Icon className=\"h-4 w-4 text-muted-foreground\" />\n      </CardHeader>\n      <CardContent>\n        <div className=\"text-2xl font-bold\">{value}</div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAUO,SAAS,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,IAAI,EAAiB;IAClE,qBACE,6LAAC,mIAAA,CAAA,OAAI;;0BACH,6LAAC,mIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,6LAAC,mIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAuB;;;;;;kCAC5C,6LAAC;wBAAK,WAAU;;;;;;;;;;;;0BAElB,6LAAC,mIAAA,CAAA,cAAW;0BACV,cAAA,6LAAC;oBAAI,WAAU;8BAAsB;;;;;;;;;;;;;;;;;AAI7C;KAZgB","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 512, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/stock-chart.tsx"],"sourcesContent":["'use client';\n\nimport { Bar, BarChart, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n} from '@/components/ui/card';\nimport {\n  ChartContainer,\n  ChartTooltipContent,\n} from '@/components/ui/chart';\nimport type { Item } from '@/types';\n\ntype StockChartProps = {\n  items: Item[];\n};\n\nexport function StockChart({ items }: StockChartProps) {\n  const chartData = items.slice(0, 10).map(item => ({\n    name: item.name,\n    quantity: item.quantity,\n  }));\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"font-bold\">Stock Levels</CardTitle>\n        <CardDescription>Top 10 items by quantity</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer config={{}} className=\"h-64 w-full\">\n          <BarChart data={chartData} margin={{ top: 5, right: 20, left: -10, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n            <XAxis\n              dataKey=\"name\"\n              tickLine={false}\n              axisLine={false}\n              tickMargin={8}\n              tickFormatter={(value) => value.slice(0, 10) + (value.length > 10 ? '...' : '')}\n            />\n            <YAxis />\n            <Tooltip\n              cursor={{ fill: 'hsl(var(--muted))' }}\n              content={<ChartTooltipContent />}\n            />\n            <Bar dataKey=\"quantity\" fill=\"hsl(var(--primary))\" radius={4} />\n          </BarChart>\n        </ChartContainer>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAVA;;;;;AAoBO,SAAS,WAAW,EAAE,KAAK,EAAmB;IACnD,MAAM,YAAY,MAAM,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,CAAA,OAAQ,CAAC;YAChD,MAAM,KAAK,IAAI;YACf,UAAU,KAAK,QAAQ;QACzB,CAAC;IAED,qBACE,6LAAC,mIAAA,CAAA,OAAI;;0BACH,6LAAC,mIAAA,CAAA,aAAU;;kCACT,6LAAC,mIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAY;;;;;;kCACjC,6LAAC,mIAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAEnB,6LAAC,mIAAA,CAAA,cAAW;0BACV,cAAA,6LAAC,oIAAA,CAAA,iBAAc;oBAAC,QAAQ,CAAC;oBAAG,WAAU;8BACpC,cAAA,6LAAC,uJAAA,CAAA,WAAQ;wBAAC,MAAM;wBAAW,QAAQ;4BAAE,KAAK;4BAAG,OAAO;4BAAI,MAAM,CAAC;4BAAI,QAAQ;wBAAE;;0CAC3E,6LAAC,gKAAA,CAAA,gBAAa;gCAAC,iBAAgB;gCAAM,UAAU;;;;;;0CAC/C,6LAAC,wJAAA,CAAA,QAAK;gCACJ,SAAQ;gCACR,UAAU;gCACV,UAAU;gCACV,YAAY;gCACZ,eAAe,CAAC,QAAU,MAAM,KAAK,CAAC,GAAG,MAAM,CAAC,MAAM,MAAM,GAAG,KAAK,QAAQ,EAAE;;;;;;0CAEhF,6LAAC,wJAAA,CAAA,QAAK;;;;;0CACN,6LAAC,0JAAA,CAAA,UAAO;gCACN,QAAQ;oCAAE,MAAM;gCAAoB;gCACpC,uBAAS,6LAAC,oIAAA,CAAA,sBAAmB;;;;;;;;;;0CAE/B,6LAAC,sJAAA,CAAA,MAAG;gCAAC,SAAQ;gCAAW,MAAK;gCAAsB,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMvE;KAlCgB","debugId":null}},
    {"offset": {"line": 654, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-stock-alert.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview This file defines a Genkit flow for generating intelligent stock alerts.\n *\n * - generateStockAlert - A function that generates a stock alert based on provided data.\n * - GenerateStockAlertInput - The input type for the generateStockAlert function.\n * - GenerateStockAlertOutput - The return type for the generateStockAlert function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateStockAlertInputSchema = z.object({\n  lowStockItems: z.array(\n    z.object({\n      itemId: z.string().describe('The unique identifier for the item.'),\n      itemName: z.string().describe('The name of the item.'),\n      currentQuantity: z.number().describe('The current quantity in stock.'),\n      reorderPoint: z.number().describe('The reorder point for the item.'),\n      averageDailySales: z\n        .number()\n        .describe('The average daily sales volume of the item.'),\n      sellingPrice: z.number().describe('The selling price of the item.'),\n      supplierName: z.string().describe('The name of the supplier.'),\n      leadTimeDays: z.number().describe('The lead time in days from the supplier.'),\n    })\n  ).describe('An array of items with low stock levels.'),\n});\nexport type GenerateStockAlertInput = z.infer<typeof GenerateStockAlertInputSchema>;\n\nconst GenerateStockAlertOutputSchema = z.object({\n  alertSummary: z.string().describe('A summary of the stock alert including potential revenue loss, disruption level, and suggested courses of action.'),\n});\nexport type GenerateStockAlertOutput = z.infer<typeof GenerateStockAlertOutputSchema>;\n\nexport async function generateStockAlert(input: GenerateStockAlertInput): Promise<GenerateStockAlertOutput> {\n  return generateStockAlertFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateStockAlertPrompt',\n  input: {schema: GenerateStockAlertInputSchema},\n  output: {schema: GenerateStockAlertOutputSchema},\n  prompt: `You are an AI assistant designed to generate stock alerts for inventory managers.\n\n  You will receive data about items with low stock levels. Your goal is to analyze this data and generate a concise alert summary that includes the following:\n\n  - Potential Revenue Loss: Estimate the potential revenue loss if the items go out of stock, based on average daily sales and selling price.\n  - Disruption Level: Assess the disruption level based on how critical the item is and how quickly it's selling.\n  - Suggested Courses of Action: Provide clear, actionable steps the manager should take, considering lead times and reorder points.\n\n  Here's the data about the low stock items:\n\n  {{#each lowStockItems}}\n  Item ID: {{itemId}}\n  Item Name: {{itemName}}\n  Current Quantity: {{currentQuantity}}\n  Reorder Point: {{reorderPoint}}\n  Average Daily Sales: {{averageDailySales}}\n  Selling Price: {{sellingPrice}}\n  Supplier Name: {{supplierName}}\n  Lead Time (Days): {{leadTimeDays}}\n  \\n\n  {{/each}}\n\n  Based on this data, generate a stock alert summary.\n  `,\n});\n\nconst generateStockAlertFlow = ai.defineFlow(\n  {\n    name: 'generateStockAlertFlow',\n    inputSchema: GenerateStockAlertInputSchema,\n    outputSchema: GenerateStockAlertOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IAoCsB,qBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 670, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 718, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/ai-alert.tsx"],"sourcesContent":["import { generateStockAlert } from '@/ai/flows/generate-stock-alert';\nimport type { Item } from '@/types';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { AlertTriangle } from 'lucide-react';\nimport { Badge } from '@/components/ui/badge';\n\ntype AIAlertProps = {\n  lowStockItems: Item[];\n};\n\nexport async function AIAlert({ lowStockItems }: AIAlertProps) {\n  if (lowStockItems.length === 0) {\n    return null;\n  }\n\n  const alertInput = {\n    lowStockItems: lowStockItems.map(item => ({\n      itemId: item.id,\n      itemName: item.name,\n      currentQuantity: item.quantity,\n      reorderPoint: item.reorderPoint,\n      averageDailySales: item.averageDailySales,\n      sellingPrice: item.price,\n      supplierName: item.supplierName,\n      leadTimeDays: item.leadTimeDays,\n    })),\n  };\n\n  try {\n    const { alertSummary } = await generateStockAlert(alertInput);\n\n    return (\n      <Card className=\"border-primary/50 bg-primary/5\">\n        <CardHeader>\n            <div className=\"flex items-center gap-3\">\n                <AlertTriangle className=\"h-6 w-6 text-primary\" />\n                <CardTitle className=\"font-bold text-primary\">Intelligent Stock Alert</CardTitle>\n                <Badge variant=\"default\" className=\"ml-auto\">AI-Powered</Badge>\n            </div>\n          <CardDescription className=\"pt-2 text-primary/90\">\n            AI-analysis of current low-stock items.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-sm whitespace-pre-wrap\">{alertSummary}</p>\n        </CardContent>\n      </Card>\n    );\n  } catch (error) {\n    console.error('Error generating AI stock alert:', error);\n    return (\n        <Card className=\"border-destructive/50 bg-destructive/5\">\n            <CardHeader>\n                <div className=\"flex items-center gap-3\">\n                    <AlertTriangle className=\"h-6 w-6 text-destructive\" />\n                    <CardTitle className=\"font-bold text-destructive\">Could not generate AI Alert</CardTitle>\n                </div>\n            </CardHeader>\n            <CardContent>\n                <p className=\"text-sm text-destructive\">There was an issue with the AI service. Please try again later.</p>\n            </CardContent>\n        </Card>\n    )\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;AACA;;;;;;AAMO,eAAe,QAAQ,EAAE,aAAa,EAAgB;IAC3D,IAAI,cAAc,MAAM,KAAK,GAAG;QAC9B,OAAO;IACT;IAEA,MAAM,aAAa;QACjB,eAAe,cAAc,GAAG,CAAC,CAAA,OAAQ,CAAC;gBACxC,QAAQ,KAAK,EAAE;gBACf,UAAU,KAAK,IAAI;gBACnB,iBAAiB,KAAK,QAAQ;gBAC9B,cAAc,KAAK,YAAY;gBAC/B,mBAAmB,KAAK,iBAAiB;gBACzC,cAAc,KAAK,KAAK;gBACxB,cAAc,KAAK,YAAY;gBAC/B,cAAc,KAAK,YAAY;YACjC,CAAC;IACH;IAEA,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,MAAM,CAAA,GAAA,6JAAA,CAAA,qBAAkB,AAAD,EAAE;QAElD,qBACE,6LAAC,mIAAA,CAAA,OAAI;YAAC,WAAU;;8BACd,6LAAC,mIAAA,CAAA,aAAU;;sCACP,6LAAC;4BAAI,WAAU;;8CACX,6LAAC,2NAAA,CAAA,gBAAa;oCAAC,WAAU;;;;;;8CACzB,6LAAC,mIAAA,CAAA,YAAS;oCAAC,WAAU;8CAAyB;;;;;;8CAC9C,6LAAC,oIAAA,CAAA,QAAK;oCAAC,SAAQ;oCAAU,WAAU;8CAAU;;;;;;;;;;;;sCAEnD,6LAAC,mIAAA,CAAA,kBAAe;4BAAC,WAAU;sCAAuB;;;;;;;;;;;;8BAIpD,6LAAC,mIAAA,CAAA,cAAW;8BACV,cAAA,6LAAC;wBAAE,WAAU;kCAA+B;;;;;;;;;;;;;;;;;IAIpD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;QAClD,qBACI,6LAAC,mIAAA,CAAA,OAAI;YAAC,WAAU;;8BACZ,6LAAC,mIAAA,CAAA,aAAU;8BACP,cAAA,6LAAC;wBAAI,WAAU;;0CACX,6LAAC,2NAAA,CAAA,gBAAa;gCAAC,WAAU;;;;;;0CACzB,6LAAC,mIAAA,CAAA,YAAS;gCAAC,WAAU;0CAA6B;;;;;;;;;;;;;;;;;8BAG1D,6LAAC,mIAAA,CAAA,cAAW;8BACR,cAAA,6LAAC;wBAAE,WAAU;kCAA2B;;;;;;;;;;;;;;;;;IAItD;AACF;KAtDsB","debugId":null}},
    {"offset": {"line": 890, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf;KAVS","debugId":null}},
    {"offset": {"line": 920, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/page-header.tsx"],"sourcesContent":["type PageHeaderProps = {\n  title: string;\n  description?: string;\n  children?: React.ReactNode;\n};\n\nexport function PageHeader({ title, description, children }: PageHeaderProps) {\n  return (\n    <div className=\"flex flex-col items-start justify-between gap-4 md:flex-row md:items-center\">\n      <div className=\"grid gap-1\">\n        <h1 className=\"text-2xl font-bold tracking-tight md:text-3xl\">{title}</h1>\n        {description && (\n          <p className=\"text-muted-foreground\">{description}</p>\n        )}\n      </div>\n      {children && <div className=\"flex shrink-0 gap-2\">{children}</div>}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAMO,SAAS,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAmB;IAC1E,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAiD;;;;;;oBAC9D,6BACC,6LAAC;wBAAE,WAAU;kCAAyB;;;;;;;;;;;;YAGzC,0BAAY,6LAAC;gBAAI,WAAU;0BAAuB;;;;;;;;;;;;AAGzD;KAZgB","debugId":null}},
    {"offset": {"line": 981, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from 'react';\nimport { Suspense } from 'react';\nimport { Package, Shapes, DollarSign, PackageX } from 'lucide-react';\nimport type { Item, Category } from '@/types';\nimport { StatCard } from '@/components/dashboard/stat-card';\nimport { StockChart } from '@/components/dashboard/stock-chart';\nimport { AIAlert } from '@/components/dashboard/ai-alert';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { PageHeader } from '@/components/page-header';\n\nexport default function DashboardPage() {\n  const [items, setItems] = React.useState<Item[]>([]);\n  const [categories, setCategories] = React.useState<Category[]>([]);\n\n  React.useEffect(() => {\n    try {\n      const storedItems = localStorage.getItem('inventopro-items');\n      if (storedItems) {\n        setItems(JSON.parse(storedItems));\n      }\n      const storedCategories = localStorage.getItem('inventopro-categories');\n      if (storedCategories) {\n        setCategories(JSON.parse(storedCategories));\n      }\n    } catch (error) {\n        console.error(\"Failed to parse from localStorage\", error);\n    }\n  }, []);\n\n  const totalItems = items.reduce((sum, item) => sum + item.quantity, 0);\n  const lowStockItemsCount = items.filter(item => item.quantity <= item.reorderPoint).length;\n  const totalValue = items.reduce((sum, item) => sum + item.quantity * item.price, 0);\n  const categoryCount = categories.length;\n\n  const lowStockForAI = items.filter(item => item.quantity <= item.reorderPoint);\n\n  return (\n    <>\n      <PageHeader title=\"Dashboard\" description=\"An overview of your inventory.\" />\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        <StatCard\n          title=\"Total Items\"\n          value={totalItems.toLocaleString()}\n          icon={Package}\n        />\n        <StatCard\n          title=\"Low Stock Items\"\n          value={lowStockItemsCount.toString()}\n          icon={PackageX}\n        />\n        <StatCard\n          title=\"Inventory Value\"\n          value={`$${totalValue.toLocaleString('en-US', {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          })}`}\n          icon={DollarSign}\n        />\n        <StatCard\n          title=\"Categories\"\n          value={categoryCount.toString()}\n          icon={Shapes}\n        />\n      </div>\n      <div className=\"grid gap-4 md:grid-cols-7\">\n        <div className=\"md:col-span-4\">\n            <StockChart items={items} />\n        </div>\n        <div className=\"md:col-span-3\">\n          <Suspense fallback={<Skeleton className=\"h-full w-full\" />}>\n            <AIAlert lowStockItems={lowStockForAI} />\n          </Suspense>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;;;AAVA;;;;;;;;;AAYe,SAAS;;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAc,AAAD,EAAU,EAAE;IACnD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAc,AAAD,EAAc,EAAE;IAEjE,CAAA,GAAA,6JAAA,CAAA,YAAe,AAAD;mCAAE;YACd,IAAI;gBACF,MAAM,cAAc,aAAa,OAAO,CAAC;gBACzC,IAAI,aAAa;oBACf,SAAS,KAAK,KAAK,CAAC;gBACtB;gBACA,MAAM,mBAAmB,aAAa,OAAO,CAAC;gBAC9C,IAAI,kBAAkB;oBACpB,cAAc,KAAK,KAAK,CAAC;gBAC3B;YACF,EAAE,OAAO,OAAO;gBACZ,QAAQ,KAAK,CAAC,qCAAqC;YACvD;QACF;kCAAG,EAAE;IAEL,MAAM,aAAa,MAAM,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,QAAQ,EAAE;IACpE,MAAM,qBAAqB,MAAM,MAAM,CAAC,CAAA,OAAQ,KAAK,QAAQ,IAAI,KAAK,YAAY,EAAE,MAAM;IAC1F,MAAM,aAAa,MAAM,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,QAAQ,GAAG,KAAK,KAAK,EAAE;IACjF,MAAM,gBAAgB,WAAW,MAAM;IAEvC,MAAM,gBAAgB,MAAM,MAAM,CAAC,CAAA,OAAQ,KAAK,QAAQ,IAAI,KAAK,YAAY;IAE7E,qBACE;;0BACE,6LAAC,uIAAA,CAAA,aAAU;gBAAC,OAAM;gBAAY,aAAY;;;;;;0BAC1C,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,kJAAA,CAAA,WAAQ;wBACP,OAAM;wBACN,OAAO,WAAW,cAAc;wBAChC,MAAM,2MAAA,CAAA,UAAO;;;;;;kCAEf,6LAAC,kJAAA,CAAA,WAAQ;wBACP,OAAM;wBACN,OAAO,mBAAmB,QAAQ;wBAClC,MAAM,iNAAA,CAAA,WAAQ;;;;;;kCAEhB,6LAAC,kJAAA,CAAA,WAAQ;wBACP,OAAM;wBACN,OAAO,CAAC,CAAC,EAAE,WAAW,cAAc,CAAC,SAAS;4BAC5C,uBAAuB;4BACvB,uBAAuB;wBACzB,IAAI;wBACJ,MAAM,qNAAA,CAAA,aAAU;;;;;;kCAElB,6LAAC,kJAAA,CAAA,WAAQ;wBACP,OAAM;wBACN,OAAO,cAAc,QAAQ;wBAC7B,MAAM,yMAAA,CAAA,SAAM;;;;;;;;;;;;0BAGhB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCACX,cAAA,6LAAC,oJAAA,CAAA,aAAU;4BAAC,OAAO;;;;;;;;;;;kCAEvB,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,6JAAA,CAAA,WAAQ;4BAAC,wBAAU,6LAAC,uIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;sCACtC,cAAA,6LAAC,iJAAA,CAAA,UAAO;gCAAC,eAAe;;;;;;;;;;;;;;;;;;;;;;;;AAMpC;GAlEwB;KAAA","debugId":null}}]
}