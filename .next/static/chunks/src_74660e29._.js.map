{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management/src/components/dashboard/stat-card.tsx"],"sourcesContent":["import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport type { LucideIcon } from 'lucide-react';\r\n\r\ntype StatCardProps = {\r\n  title: string;\r\n  value: string;\r\n  icon: LucideIcon;\r\n  description?: string;\r\n};\r\n\r\nexport function StatCard({ title, value, icon: Icon }: StatCardProps) {\r\n  return (\r\n    <Card>\r\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n        <CardTitle className=\"text-sm font-medium\">{title}</CardTitle>\r\n        <Icon className=\"h-4 w-4 text-muted-foreground\" />\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"text-2xl font-bold break-words\">{value}</div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;AAUO,SAAS,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,IAAI,EAAiB;IAClE,qBACE,6LAAC,mIAAA,CAAA,OAAI;;0BACH,6LAAC,mIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,6LAAC,mIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAuB;;;;;;kCAC5C,6LAAC;wBAAK,WAAU;;;;;;;;;;;;0BAElB,6LAAC,mIAAA,CAAA,cAAW;0BACV,cAAA,6LAAC;oBAAI,WAAU;8BAAkC;;;;;;;;;;;;;;;;;AAIzD;KAZgB","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as RechartsPrimitive from \"recharts\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\n// Format: { THEME_NAME: CSS_SELECTOR }\r\nconst THEMES = { light: \"\", dark: \".dark\" } as const\r\n\r\nexport type ChartConfig = {\r\n  [k in string]: {\r\n    label?: React.ReactNode\r\n    icon?: React.ComponentType\r\n  } & (\r\n    | { color?: string; theme?: never }\r\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\r\n  )\r\n}\r\n\r\ntype ChartContextProps = {\r\n  config: ChartConfig\r\n}\r\n\r\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\r\n\r\nfunction useChart() {\r\n  const context = React.useContext(ChartContext)\r\n\r\n  if (!context) {\r\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nconst ChartContainer = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\"> & {\r\n    config: ChartConfig\r\n    children: React.ComponentProps<\r\n      typeof RechartsPrimitive.ResponsiveContainer\r\n    >[\"children\"]\r\n  }\r\n>(({ id, className, children, config, ...props }, ref) => {\r\n  const uniqueId = React.useId()\r\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\r\n\r\n  return (\r\n    <ChartContext.Provider value={{ config }}>\r\n      <div\r\n        data-chart={chartId}\r\n        ref={ref}\r\n        className={cn(\r\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        <ChartStyle id={chartId} config={config} />\r\n        <RechartsPrimitive.ResponsiveContainer>\r\n          {children}\r\n        </RechartsPrimitive.ResponsiveContainer>\r\n      </div>\r\n    </ChartContext.Provider>\r\n  )\r\n})\r\nChartContainer.displayName = \"Chart\"\r\n\r\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\r\n  const colorConfig = Object.entries(config).filter(\r\n    ([, config]) => config.theme || config.color\r\n  )\r\n\r\n  if (!colorConfig.length) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <style\r\n      dangerouslySetInnerHTML={{\r\n        __html: Object.entries(THEMES)\r\n          .map(\r\n            ([theme, prefix]) => `\r\n${prefix} [data-chart=${id}] {\r\n${colorConfig\r\n  .map(([key, itemConfig]) => {\r\n    const color =\r\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\r\n      itemConfig.color\r\n    return color ? `  --color-${key}: ${color};` : null\r\n  })\r\n  .join(\"\\n\")}\r\n}\r\n`\r\n          )\r\n          .join(\"\\n\"),\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst ChartTooltip = RechartsPrimitive.Tooltip\r\n\r\nconst ChartTooltipContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\r\n    React.ComponentProps<\"div\"> & {\r\n      hideLabel?: boolean\r\n      hideIndicator?: boolean\r\n      indicator?: \"line\" | \"dot\" | \"dashed\"\r\n      nameKey?: string\r\n      labelKey?: string\r\n    }\r\n>(\r\n  (\r\n    {\r\n      active,\r\n      payload,\r\n      className,\r\n      indicator = \"dot\",\r\n      hideLabel = false,\r\n      hideIndicator = false,\r\n      label,\r\n      labelFormatter,\r\n      labelClassName,\r\n      formatter,\r\n      color,\r\n      nameKey,\r\n      labelKey,\r\n    },\r\n    ref\r\n  ) => {\r\n    const { config } = useChart()\r\n\r\n    const tooltipLabel = React.useMemo(() => {\r\n      if (hideLabel || !payload?.length) {\r\n        return null\r\n      }\r\n\r\n      const [item] = payload\r\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\r\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\r\n      const value =\r\n        !labelKey && typeof label === \"string\"\r\n          ? config[label as keyof typeof config]?.label || label\r\n          : itemConfig?.label\r\n\r\n      if (labelFormatter) {\r\n        return (\r\n          <div className={cn(\"font-medium\", labelClassName)}>\r\n            {labelFormatter(value, payload)}\r\n          </div>\r\n        )\r\n      }\r\n\r\n      if (!value) {\r\n        return null\r\n      }\r\n\r\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\r\n    }, [\r\n      label,\r\n      labelFormatter,\r\n      payload,\r\n      hideLabel,\r\n      labelClassName,\r\n      config,\r\n      labelKey,\r\n    ])\r\n\r\n    if (!active || !payload?.length) {\r\n      return null\r\n    }\r\n\r\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\r\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\r\n          className\r\n        )}\r\n      >\r\n        {!nestLabel ? tooltipLabel : null}\r\n        <div className=\"grid gap-1.5\">\r\n          {payload.map((item, index) => {\r\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\r\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\r\n            const indicatorColor = color || item.payload.fill || item.color\r\n\r\n            return (\r\n              <div\r\n                key={item.dataKey}\r\n                className={cn(\r\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\r\n                  indicator === \"dot\" && \"items-center\"\r\n                )}\r\n              >\r\n                {formatter && item?.value !== undefined && item.name ? (\r\n                  formatter(item.value, item.name, item, index, item.payload)\r\n                ) : (\r\n                  <>\r\n                    {itemConfig?.icon ? (\r\n                      <itemConfig.icon />\r\n                    ) : (\r\n                      !hideIndicator && (\r\n                        <div\r\n                          className={cn(\r\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\r\n                            {\r\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\r\n                              \"w-1\": indicator === \"line\",\r\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\r\n                                indicator === \"dashed\",\r\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\r\n                            }\r\n                          )}\r\n                          style={\r\n                            {\r\n                              \"--color-bg\": indicatorColor,\r\n                              \"--color-border\": indicatorColor,\r\n                            } as React.CSSProperties\r\n                          }\r\n                        />\r\n                      )\r\n                    )}\r\n                    <div\r\n                      className={cn(\r\n                        \"flex flex-1 justify-between leading-none\",\r\n                        nestLabel ? \"items-end\" : \"items-center\"\r\n                      )}\r\n                    >\r\n                      <div className=\"grid gap-1.5\">\r\n                        {nestLabel ? tooltipLabel : null}\r\n                        <span className=\"text-muted-foreground\">\r\n                          {itemConfig?.label || item.name}\r\n                        </span>\r\n                      </div>\r\n                      {item.value && (\r\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\r\n                          {item.value.toLocaleString()}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n)\r\nChartTooltipContent.displayName = \"ChartTooltip\"\r\n\r\nconst ChartLegend = RechartsPrimitive.Legend\r\n\r\nconst ChartLegendContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\"> &\r\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\r\n      hideIcon?: boolean\r\n      nameKey?: string\r\n    }\r\n>(\r\n  (\r\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\r\n    ref\r\n  ) => {\r\n    const { config } = useChart()\r\n\r\n    if (!payload?.length) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\r\n          \"flex items-center justify-center gap-4\",\r\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\r\n          className\r\n        )}\r\n      >\r\n        {payload.map((item) => {\r\n          const key = `${nameKey || item.dataKey || \"value\"}`\r\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\r\n\r\n          return (\r\n            <div\r\n              key={item.value}\r\n              className={cn(\r\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\r\n              )}\r\n            >\r\n              {itemConfig?.icon && !hideIcon ? (\r\n                <itemConfig.icon />\r\n              ) : (\r\n                <div\r\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\r\n                  style={{\r\n                    backgroundColor: item.color,\r\n                  }}\r\n                />\r\n              )}\r\n              {itemConfig?.label}\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n)\r\nChartLegendContent.displayName = \"ChartLegend\"\r\n\r\n// Helper to extract item config from a payload.\r\nfunction getPayloadConfigFromPayload(\r\n  config: ChartConfig,\r\n  payload: unknown,\r\n  key: string\r\n) {\r\n  if (typeof payload !== \"object\" || payload === null) {\r\n    return undefined\r\n  }\r\n\r\n  const payloadPayload =\r\n    \"payload\" in payload &&\r\n    typeof payload.payload === \"object\" &&\r\n    payload.payload !== null\r\n      ? payload.payload\r\n      : undefined\r\n\r\n  let configLabelKey: string = key\r\n\r\n  if (\r\n    key in payload &&\r\n    typeof payload[key as keyof typeof payload] === \"string\"\r\n  ) {\r\n    configLabelKey = payload[key as keyof typeof payload] as string\r\n  } else if (\r\n    payloadPayload &&\r\n    key in payloadPayload &&\r\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\r\n  ) {\r\n    configLabelKey = payloadPayload[\r\n      key as keyof typeof payloadPayload\r\n    ] as string\r\n  }\r\n\r\n  return configLabelKey in config\r\n    ? config[configLabelKey]\r\n    : config[key as keyof typeof config]\r\n}\r\n\r\nexport {\r\n  ChartContainer,\r\n  ChartTooltip,\r\n  ChartTooltipContent,\r\n  ChartLegend,\r\n  ChartLegendContent,\r\n  ChartStyle,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 512, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management/src/components/dashboard/stock-chart.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { Bar, BarChart, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardDescription,\r\n} from '@/components/ui/card';\r\nimport {\r\n  ChartContainer,\r\n  ChartTooltipContent,\r\n} from '@/components/ui/chart';\r\nimport type { Item } from '@/types';\r\n\r\ntype StockChartProps = {\r\n  items: Item[];\r\n};\r\n\r\nexport function StockChart({ items }: StockChartProps) {\r\n  const chartData = items.slice(0, 10).map(item => ({\r\n    name: item.name,\r\n    quantity: item.quantity,\r\n  }));\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle className=\"font-bold\">Stock Levels</CardTitle>\r\n        <CardDescription>Top 10 items by quantity</CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <ChartContainer config={{}} className=\"h-64 w-full\">\r\n          <BarChart data={chartData} margin={{ top: 5, right: 20, left: -10, bottom: 5 }}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n            <XAxis\r\n              dataKey=\"name\"\r\n              tickLine={false}\r\n              axisLine={false}\r\n              tickMargin={8}\r\n              tickFormatter={(value) => value.slice(0, 10) + (value.length > 10 ? '...' : '')}\r\n            />\r\n            <YAxis />\r\n            <Tooltip\r\n              cursor={{ fill: 'hsl(var(--muted))' }}\r\n              content={<ChartTooltipContent />}\r\n            />\r\n            <Bar dataKey=\"quantity\" fill=\"hsl(var(--primary))\" radius={4} />\r\n          </BarChart>\r\n        </ChartContainer>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAVA;;;;;AAoBO,SAAS,WAAW,EAAE,KAAK,EAAmB;IACnD,MAAM,YAAY,MAAM,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,CAAA,OAAQ,CAAC;YAChD,MAAM,KAAK,IAAI;YACf,UAAU,KAAK,QAAQ;QACzB,CAAC;IAED,qBACE,6LAAC,mIAAA,CAAA,OAAI;;0BACH,6LAAC,mIAAA,CAAA,aAAU;;kCACT,6LAAC,mIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAY;;;;;;kCACjC,6LAAC,mIAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAEnB,6LAAC,mIAAA,CAAA,cAAW;0BACV,cAAA,6LAAC,oIAAA,CAAA,iBAAc;oBAAC,QAAQ,CAAC;oBAAG,WAAU;8BACpC,cAAA,6LAAC,uJAAA,CAAA,WAAQ;wBAAC,MAAM;wBAAW,QAAQ;4BAAE,KAAK;4BAAG,OAAO;4BAAI,MAAM,CAAC;4BAAI,QAAQ;wBAAE;;0CAC3E,6LAAC,gKAAA,CAAA,gBAAa;gCAAC,iBAAgB;gCAAM,UAAU;;;;;;0CAC/C,6LAAC,wJAAA,CAAA,QAAK;gCACJ,SAAQ;gCACR,UAAU;gCACV,UAAU;gCACV,YAAY;gCACZ,eAAe,CAAC,QAAU,MAAM,KAAK,CAAC,GAAG,MAAM,CAAC,MAAM,MAAM,GAAG,KAAK,QAAQ,EAAE;;;;;;0CAEhF,6LAAC,wJAAA,CAAA,QAAK;;;;;0CACN,6LAAC,0JAAA,CAAA,UAAO;gCACN,QAAQ;oCAAE,MAAM;gCAAoB;gCACpC,uBAAS,6LAAC,oIAAA,CAAA,sBAAmB;;;;;;;;;;0CAE/B,6LAAC,sJAAA,CAAA,MAAG;gCAAC,SAAQ;gCAAW,MAAK;gCAAsB,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMvE;KAlCgB","debugId":null}},
    {"offset": {"line": 654, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management/src/ai/flows/generate-inventory-analysis.ts"],"sourcesContent":["'use server';\r\n\r\n/**\r\n * @fileOverview This file defines a Genkit flow for generating a comprehensive inventory analysis.\r\n *\r\n * - generateInventoryAnalysis - A function that generates a health report based on all inventory items.\r\n * - GenerateInventoryAnalysisInput - The input type for the function.\r\n * - GenerateInventoryAnalysisOutput - The return type for the function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\n\r\nconst GenerateInventoryAnalysisInputSchema = z.object({\r\n  inventoryItems: z.array(\r\n    z.object({\r\n      itemId: z.string().describe('The unique identifier for the item.'),\r\n      itemName: z.string().describe('The name of the item.'),\r\n      currentQuantity: z.number().describe('The current quantity in stock.'),\r\n      reorderPoint: z.number().describe('The reorder point for the item.'),\r\n      averageDailySales: z\r\n        .number()\r\n        .describe('The average daily sales volume of the item.'),\r\n      sellingPrice: z.number().describe('The selling price of the item.'),\r\n      supplierName: z.string().describe('The name of the supplier.'),\r\n      leadTimeDays: z.number().describe('The lead time in days from the supplier.'),\r\n    })\r\n  ).describe('An array of all items in the inventory.'),\r\n});\r\nexport type GenerateInventoryAnalysisInput = z.infer<typeof GenerateInventoryAnalysisInputSchema>;\r\n\r\nconst ItemDetailSchema = z.object({\r\n  name: z.string().describe('The name of the item.'),\r\n  quantity: z.number().describe('The current quantity in stock.'),\r\n  price: z.number().describe('The selling price of the item.'),\r\n});\r\n\r\nconst GenerateInventoryAnalysisOutputSchema = z.object({\r\n  overallHealthScore: z.number().int().min(0).max(100).describe('A score from 0-100 representing the overall health of the inventory. 100 is perfect.'),\r\n  analysis: z.array(z.object({\r\n    title: z.string().describe('The title of the analysis section (e.g., \"Best Sellers\", \"Slow Movers\", \"Recommendations\").'),\r\n    points: z.array(z.string()).describe('A list of key observations or recommendations for this section.')\r\n  })).describe(\"A structured analysis of the inventory's health, broken down into key areas.\"),\r\n  lowStockItems: z.array(ItemDetailSchema).describe('A list of items with a quantity of 0, including their key attributes.'),\r\n  inStockItems: z.array(ItemDetailSchema).describe('A list of items with a quantity greater than 0, including their key attributes.')\r\n});\r\nexport type GenerateInventoryAnalysisOutput = z.infer<typeof GenerateInventoryAnalysisOutputSchema>;\r\n\r\nexport async function generateInventoryAnalysis(input: GenerateInventoryAnalysisInput): Promise<GenerateInventoryAnalysisOutput> {\r\n  return generateInventoryAnalysisFlow(input);\r\n}\r\n\r\nconst prompt = ai.definePrompt({\r\n  name: 'generateInventoryAnalysisPrompt',\r\n  input: {schema: GenerateInventoryAnalysisInputSchema},\r\n  output: {schema: GenerateInventoryAnalysisOutputSchema},\r\n  prompt: `You are a world-class AI inventory management consultant. Your task is to conduct a comprehensive health check of the entire inventory and provide a strategic analysis.\r\n\r\n  Analyze the provided data for all inventory items to generate a structured report. Your response must be highly professional, insightful, and strategic.\r\n\r\n  **1. Overall Health Score (0-100):**\r\n  Calculate a single health score for the entire inventory using the following weighted methodology. Base this on a holistic view:\r\n  - **Stock Levels (50% weight):** Are items appropriately stocked?\r\n      - For each item, calculate a stock level score (0-100). 100 is perfect (quantity is exactly at reorder point * 1.5).\r\n      - Penalize for being out-of-stock (score of 0).\r\n      - Penalize for significant overstock (e.g., quantity > 3 * reorder point).\r\n      - Average the scores for all items.\r\n  - **Sales Velocity (30% weight):** Are items selling well?\r\n      - Categorize items as \"Fast Mover\" (sells > 10 units/day), \"Medium Mover\" (1-10 units/day), \"Slow Mover\" (<1 unit/day).\r\n      - Calculate a score based on the distribution. A healthy inventory has a good mix, but a high percentage of slow-movers should lower the score. (e.g., % Fast * 100 + % Medium * 70 + % Slow * 30).\r\n  - **Risk (20% weight):**\r\n      - Identify items where the 'days until stockout' (quantity / avg daily sales) is less than the supplier lead time.\r\n      - The higher the percentage of items at risk of stocking out, the lower the score. (e.g., 100 - (% of at-risk items * 2)).\r\n  - Combine these weighted scores into a final health score from 0-100. A score below 50 indicates critical issues.\r\n\r\n  **2. Structured Analysis:**\r\n  Provide a breakdown of your findings into the following sections. For each section, provide a few bullet points highlighting the most important insights. Be concise and impactful.\r\n  - **Best Sellers:** Identify the top-performing items based on sales velocity and value. Comment on their stock levels. Are they well-managed?\r\n  - **Slow Movers:** Identify items with low sales velocity or those that are significantly overstocked (quantity far exceeds reorder point and sales rate).\r\n  - **Recommendations:** Based on your analysis, provide a list of strategic recommendations to improve inventory health. Examples: \"Consider a promotional campaign for [Slow Mover Item Name]\", \"Urgently re-order [Critical Low Stock Item Name]\", \"Increase reorder point for [Best Seller Name] to avoid stockouts.\"\r\n\r\n  **3. Item Lists:**\r\n  - **Low Stock Items:** Populate the 'lowStockItems' array with all items that have a current quantity of 0. Include their name, quantity, and price.\r\n  - **In-Stock Items:** Populate the 'inStockItems' array with all items that have a current quantity greater than 0. Include their name, quantity, and price.\r\n\r\n\r\n  Here is the data for all inventory items:\r\n\r\n  {{#each inventoryItems}}\r\n  - Item: {{itemName}} (ID: {{itemId}})\r\n    - Current Quantity: {{currentQuantity}}\r\n    - Re-order Point: {{reorderPoint}}\r\n    - Avg. Daily Sales: {{averageDailySales}}\r\n    - Selling Price: $ {{sellingPrice}}\r\n    - Supplier: {{supplierName}}\r\n    - Lead Time: {{leadTimeDays}} days\r\n  {{/each}}\r\n\r\n  Based on this complete data set, generate the comprehensive inventory health analysis.\r\n  `,\r\n});\r\n\r\nconst generateInventoryAnalysisFlow = ai.defineFlow(\r\n  {\r\n    name: 'generateInventoryAnalysisFlow',\r\n    inputSchema: GenerateInventoryAnalysisInputSchema,\r\n    outputSchema: GenerateInventoryAnalysisOutputSchema,\r\n  },\r\n  async input => {\r\n    // Log the input before sending it to the prompt\r\n    console.log('Input for generateInventoryAnalysisFlow:', JSON.stringify(input, null, 2));\r\n\r\n    const {output} = await prompt(input);\r\n\r\n    // Log the output received from the prompt\r\n    console.log('Output from generateInventoryAnalysisFlow:', JSON.stringify(output, null, 2));\r\n\r\n    return output!;\r\n  }\r\n);"],"names":[],"mappings":";;;;;;IAgDsB,4BAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 670, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 718, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\r\n\r\nfunction Skeleton({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) {\r\n  return (\r\n    <div\r\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Skeleton }\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf;KAVS","debugId":null}},
    {"offset": {"line": 748, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management/src/components/ui/accordion.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\r\nimport { ChevronDown } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Accordion = AccordionPrimitive.Root\r\n\r\nconst AccordionItem = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\r\n>(({ className, ...props }, ref) => (\r\n  <AccordionPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\"border-b\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAccordionItem.displayName = \"AccordionItem\"\r\n\r\nconst AccordionTrigger = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <AccordionPrimitive.Header className=\"flex\">\r\n    <AccordionPrimitive.Trigger\r\n      ref={ref}\r\n      className={cn(\r\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\r\n    </AccordionPrimitive.Trigger>\r\n  </AccordionPrimitive.Header>\r\n))\r\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\r\n\r\nconst AccordionContent = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <AccordionPrimitive.Content\r\n    ref={ref}\r\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\r\n    {...props}\r\n  >\r\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\r\n  </AccordionPrimitive.Content>\r\n))\r\n\r\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\r\n\r\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,YAAY,wKAAA,CAAA,OAAuB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QACzB,GAAG,KAAK;;;;;;;AAGb,cAAc,WAAW,GAAG;AAE5B,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,wKAAA,CAAA,SAAyB;QAAC,WAAU;kBACnC,cAAA,6LAAC,wKAAA,CAAA,UAA0B;YACzB,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gIACA;YAED,GAAG,KAAK;;gBAER;8BACD,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;;AAI7B,iBAAiB,WAAW,GAAG,wKAAA,CAAA,UAA0B,CAAC,WAAW;AAErE,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,wKAAA,CAAA,UAA0B;QACzB,KAAK;QACL,WAAU;QACT,GAAG,KAAK;kBAET,cAAA,6LAAC;YAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,aAAa;sBAAa;;;;;;;;;;;;AAIjD,iBAAiB,WAAW,GAAG,wKAAA,CAAA,UAA0B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 841, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Table = React.forwardRef<\r\n  HTMLTableElement,\r\n  React.HTMLAttributes<HTMLTableElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table\r\n      ref={ref}\r\n      className={cn(\"w-full caption-bottom text-sm\", className)}\r\n      {...props}\r\n    />\r\n  </div>\r\n))\r\nTable.displayName = \"Table\"\r\n\r\nconst TableHeader = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\r\n))\r\nTableHeader.displayName = \"TableHeader\"\r\n\r\nconst TableBody = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tbody\r\n    ref={ref}\r\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableBody.displayName = \"TableBody\"\r\n\r\nconst TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableFooter.displayName = \"TableFooter\"\r\n\r\nconst TableRow = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  React.HTMLAttributes<IHTMLTableRowElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableRow.displayName = \"TableRow\"\r\n\r\nconst TableHead = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.ThHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableHead.displayName = \"TableHead\"\r\n\r\nconst TableCell = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.TdHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCell.displayName = \"TableCell\"\r\n\r\nconst TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCaption.displayName = \"TableCaption\"\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 979, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Progress = React.forwardRef<\r\n  React.ElementRef<typeof ProgressPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\r\n>(({ className, value, ...props }, ref) => (\r\n  <ProgressPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ProgressPrimitive.Indicator\r\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\r\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\r\n    />\r\n  </ProgressPrimitive.Root>\r\n))\r\nProgress.displayName = ProgressPrimitive.Root.displayName\r\n\r\nexport { Progress }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1025, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management/src/components/dashboard/ai-health-report.tsx"],"sourcesContent":["\r\n\"use client\";\r\n\r\nimport * as React from 'react';\r\nimport { generateInventoryAnalysis, type GenerateInventoryAnalysisOutput } from '@/ai/flows/generate-inventory-analysis';\r\nimport type { Item } from '@/types';\r\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\r\nimport { AlertTriangle, Zap, CheckCircle, TrendingDown, TrendingUp, PackageX, HelpCircle, Lightbulb, RefreshCw } from 'lucide-react';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Skeleton } from '@/components/ui/skeleton';\r\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '../ui/accordion';\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '../ui/table';\r\nimport { Progress } from '../ui/progress';\r\n\r\ntype AIHealthReportProps = {\r\n  allItems: Item[];\r\n};\r\n\r\nexport function AIHealthReport({ allItems }: AIHealthReportProps) {\r\n  const [report, setReport] = React.useState<GenerateInventoryAnalysisOutput | null>(null);\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n  const [error, setError] = React.useState<string | null>(null);\r\n  const [retryCount, setRetryCount] = React.useState(0);\r\n\r\n  const fetchReport = React.useCallback(async () => {\r\n    if (allItems.length === 0) {\r\n      setIsLoading(false);\r\n      setReport(null);\r\n      setError(null);\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    const reportInput = {\r\n      inventoryItems: allItems.map(item => ({\r\n        itemId: item.id,\r\n        itemName: item.name,\r\n        currentQuantity: item.quantity,\r\n        reorderPoint: item.reorderPoint,\r\n        averageDailySales: item.averageDailySales,\r\n        sellingPrice: item.price,\r\n        supplierName: item.supplierName,\r\n        leadTimeDays: item.leadTimeDays,\r\n      })),\r\n    };\r\n\r\n    try {\r\n      const result = await generateInventoryAnalysis(reportInput);\r\n      setReport(result);\r\n    } catch (e: any) {\r\n      console.error('Error generating AI health report:', e);\r\n      const errorMessage = e.message || '';\r\n      if (errorMessage.includes('429') || errorMessage.includes('503')) {\r\n        setError('The AI service is currently busy. Retrying automatically...');\r\n        setTimeout(() => setRetryCount(prev => prev + 1), 5000); \r\n      } else {\r\n        setError('An unexpected error occurred with the AI service.');\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [allItems, retryCount]);\r\n\r\n\r\n  React.useEffect(() => {\r\n    // Debounce the fetchReport call\r\n    const handler = setTimeout(() => {\r\n        fetchReport();\r\n    }, 500);\r\n\r\n    return () => {\r\n        clearTimeout(handler);\r\n    };\r\n  }, [fetchReport]);\r\n\r\n  if (allItems.length === 0) {\r\n    return (\r\n        <Card className=\"border-primary/50 bg-primary/5 h-full\">\r\n            <CardHeader>\r\n                <div className=\"flex items-center gap-3\">\r\n                    <Zap className=\"h-6 w-6 text-primary\" />\r\n                    <CardTitle className=\"font-bold text-primary\">AI Inventory Analysis</CardTitle>\r\n                </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"flex flex-col items-center justify-center text-center h-full p-8\">\r\n                    <HelpCircle className=\"h-12 w-12 text-muted-foreground mb-4\" />\r\n                    <h3 className=\"text-lg font-semibold text-foreground\">No Inventory Data</h3>\r\n                    <p className=\"text-muted-foreground text-sm\">Add items to your inventory to get started with AI analysis.</p>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n  }\r\n\r\n  if (isLoading && !error) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <Skeleton className=\"h-6 w-48\" />\r\n          <Skeleton className=\"h-4 w-3/4\" />\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4 pt-6\">\r\n          <Skeleton className=\"h-10 w-full\" />\r\n          <Skeleton className=\"h-24 w-full\" />\r\n          <Skeleton className=\"h-16 w-full\" />\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    const isRetrying = error.includes('Retrying');\r\n    return (\r\n      <Card className=\"border-destructive/50 bg-destructive/5\">\r\n        <CardHeader>\r\n          <div className=\"flex items-center gap-3\">\r\n            <AlertTriangle className=\"h-6 w-6 text-destructive\" />\r\n            <CardTitle className=\"font-bold text-destructive\">Could not generate AI Report</CardTitle>\r\n          </div>\r\n        </CardHeader>\r\n        <CardContent>\r\n            <div className='flex items-start gap-2'>\r\n              {isRetrying && <RefreshCw className=\"h-4 w-4 text-destructive animate-spin mt-1\" />}\r\n              <p className=\"text-sm text-destructive\">{error}</p>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  if (!report) {\r\n    return null;\r\n  }\r\n  \r\n  const getHealthScoreColor = (score: number) => {\r\n    if (score > 80) return 'text-green-500';\r\n    if (score > 50) return 'text-yellow-500';\r\n    return 'text-red-500';\r\n  }\r\n  \r\n  const iconMap: { [key: string]: React.ElementType } = {\r\n    'Best Sellers': TrendingUp,\r\n    'Slow Movers': TrendingDown,\r\n    'Recommendations': Lightbulb,\r\n    'default': CheckCircle\r\n  }\r\n\r\n  return (\r\n    <Card className=\"border-primary/50 bg-primary/5 h-full\">\r\n      <CardHeader>\r\n        <div className=\"flex items-center gap-3\">\r\n          <Zap className=\"h-6 w-6 text-primary\" />\r\n          <CardTitle className=\"font-bold text-primary\">AI Inventory Health</CardTitle>\r\n          <Badge variant=\"default\" className=\"ml-auto\">AI-Powered</Badge>\r\n        </div>\r\n        <CardDescription className=\"pt-2 text-primary/90\">\r\n          A strategic overview of your inventory performance and opportunities.\r\n        </CardDescription>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4\">\r\n        <div className=\"text-center rounded-lg bg-background p-3 space-y-2\">\r\n            <div className=\"flex items-center justify-between\">\r\n                <p className=\"text-sm font-medium text-muted-foreground\">Overall Health Score</p>\r\n                <p className={`text-2xl font-bold ${getHealthScoreColor(report.overallHealthScore)}`}>\r\n                    {report.overallHealthScore} <span className=\"text-base text-muted-foreground\">/ 100</span>\r\n                </p>\r\n            </div>\r\n            <Progress value={report.overallHealthScore} />\r\n        </div>\r\n        <Accordion type=\"single\" collapsible className=\"w-full\" defaultValue=\"item-0\">\r\n          {report.analysis.map((section, index) => {\r\n            const Icon = iconMap[section.title] || iconMap.default;\r\n            return (\r\n              <AccordionItem value={`item-${index}`} key={index}>\r\n                <AccordionTrigger>\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <Icon className=\"h-5 w-5 text-primary\" />\r\n                    <span className=\"font-semibold text-foreground\">{section.title}</span>\r\n                  </div>\r\n                </AccordionTrigger>\r\n                <AccordionContent>\r\n                  <ul className=\"list-disc pl-5 space-y-2 text-sm text-muted-foreground\">\r\n                    {section.points.map((point, pIndex) => (\r\n                      <li key={pIndex}>{point}</li>\r\n                    ))}\r\n                  </ul>\r\n                </AccordionContent>\r\n              </AccordionItem>\r\n            );\r\n          })}\r\n           {report.lowStockItems && report.lowStockItems.length > 0 && (\r\n                <AccordionItem value=\"low-stock-items\">\r\n                    <AccordionTrigger>\r\n                        <div className=\"flex items-center gap-3\">\r\n                            <PackageX className=\"h-5 w-5 text-primary\" />\r\n                            <span className=\"font-semibold text-foreground\">Low Stock Items</span>\r\n                        </div>\r\n                    </AccordionTrigger>\r\n                    <AccordionContent>\r\n                        <Table>\r\n                            <TableHeader>\r\n                                <TableRow>\r\n                                    <TableHead>Name</TableHead>\r\n                                    <TableHead className=\"text-right\">Quantity</TableHead>\r\n                                    <TableHead className=\"text-right\">Price</TableHead>\r\n                                </TableRow>\r\n                            </TableHeader>\r\n                            <TableBody>\r\n                                {report.lowStockItems.map((item, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell className=\"font-medium\">{item.name}</TableCell>\r\n                                        <TableCell className=\"text-right\">{item.quantity}</TableCell>\r\n                                        <TableCell className=\"text-right\">${item.price.toFixed(2)}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </AccordionContent>\r\n                </AccordionItem>\r\n           )}\r\n           {report.inStockItems && report.inStockItems.length > 0 && (\r\n                <AccordionItem value=\"in-stock-items\">\r\n                    <AccordionTrigger>\r\n                        <div className=\"flex items-center gap-3\">\r\n                            <CheckCircle className=\"h-5 w-5 text-primary\" />\r\n                            <span className=\"font-semibold text-foreground\">In-Stock Items</span>\r\n                        </div>\r\n                    </AccordionTrigger>\r\n                    <AccordionContent>\r\n                         <Table>\r\n                            <TableHeader>\r\n                                <TableRow>\r\n                                    <TableHead>Name</TableHead>\r\n                                    <TableHead className=\"text-right\">Quantity</TableHead>\r\n                                    <TableHead className=\"text-right\">Price</TableHead>\r\n                                </TableRow>\r\n                            </TableHeader>\r\n                            <TableBody>\r\n                                {report.inStockItems.map((item, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell className=\"font-medium\">{item.name}</TableCell>\r\n                                        <TableCell className=\"text-right\">{item.quantity}</TableCell>\r\n                                        <TableCell className=\"text-right\">${item.price.toFixed(2)}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </AccordionContent>\r\n                </AccordionItem>\r\n           )}\r\n        </Accordion>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAXA;;;;;;;;;;AAiBO,SAAS,eAAe,EAAE,QAAQ,EAAuB;;IAC9D,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAc,AAAD,EAA0C;IACnF,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAc,AAAD,EAAE;IACjD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAc,AAAD,EAAiB;IACxD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAc,AAAD,EAAE;IAEnD,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,cAAiB,AAAD;mDAAE;YACpC,IAAI,SAAS,MAAM,KAAK,GAAG;gBACzB,aAAa;gBACb,UAAU;gBACV,SAAS;gBACT;YACF;YAEA,aAAa;YACb,SAAS;YAET,MAAM,cAAc;gBAClB,gBAAgB,SAAS,GAAG;+DAAC,CAAA,OAAQ,CAAC;4BACpC,QAAQ,KAAK,EAAE;4BACf,UAAU,KAAK,IAAI;4BACnB,iBAAiB,KAAK,QAAQ;4BAC9B,cAAc,KAAK,YAAY;4BAC/B,mBAAmB,KAAK,iBAAiB;4BACzC,cAAc,KAAK,KAAK;4BACxB,cAAc,KAAK,YAAY;4BAC/B,cAAc,KAAK,YAAY;wBACjC,CAAC;;YACH;YAEA,IAAI;gBACF,MAAM,SAAS,MAAM,CAAA,GAAA,6JAAA,CAAA,4BAAyB,AAAD,EAAE;gBAC/C,UAAU;YACZ,EAAE,OAAO,GAAQ;gBACf,QAAQ,KAAK,CAAC,sCAAsC;gBACpD,MAAM,eAAe,EAAE,OAAO,IAAI;gBAClC,IAAI,aAAa,QAAQ,CAAC,UAAU,aAAa,QAAQ,CAAC,QAAQ;oBAChE,SAAS;oBACT;mEAAW,IAAM;2EAAc,CAAA,OAAQ,OAAO;;kEAAI;gBACpD,OAAO;oBACL,SAAS;gBACX;YACF,SAAU;gBACR,aAAa;YACf;QACF,uDAAuD;QACvD;kDAAG;QAAC;QAAU;KAAW;IAGzB,CAAA,GAAA,6JAAA,CAAA,YAAe,AAAD;oCAAE;YACd,gCAAgC;YAChC,MAAM,UAAU;oDAAW;oBACvB;gBACJ;mDAAG;YAEH;4CAAO;oBACH,aAAa;gBACjB;;QACF;mCAAG;QAAC;KAAY;IAEhB,IAAI,SAAS,MAAM,KAAK,GAAG;QACzB,qBACI,6LAAC,mIAAA,CAAA,OAAI;YAAC,WAAU;;8BACZ,6LAAC,mIAAA,CAAA,aAAU;8BACP,cAAA,6LAAC;wBAAI,WAAU;;0CACX,6LAAC,mMAAA,CAAA,MAAG;gCAAC,WAAU;;;;;;0CACf,6LAAC,mIAAA,CAAA,YAAS;gCAAC,WAAU;0CAAyB;;;;;;;;;;;;;;;;;8BAGtD,6LAAC,mIAAA,CAAA,cAAW;8BACR,cAAA,6LAAC;wBAAI,WAAU;;0CACX,6LAAC,qNAAA,CAAA,aAAU;gCAAC,WAAU;;;;;;0CACtB,6LAAC;gCAAG,WAAU;0CAAwC;;;;;;0CACtD,6LAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;;;;;;;;;;;;;IAK/D;IAEA,IAAI,aAAa,CAAC,OAAO;QACvB,qBACE,6LAAC,mIAAA,CAAA,OAAI;;8BACH,6LAAC,mIAAA,CAAA,aAAU;;sCACT,6LAAC,uIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,6LAAC,uIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;;;;;;;8BAEtB,6LAAC,mIAAA,CAAA,cAAW;oBAAC,WAAU;;sCACrB,6LAAC,uIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,6LAAC,uIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,6LAAC,uIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;;;;;;;;;;;;;IAI5B;IAEA,IAAI,OAAO;QACT,MAAM,aAAa,MAAM,QAAQ,CAAC;QAClC,qBACE,6LAAC,mIAAA,CAAA,OAAI;YAAC,WAAU;;8BACd,6LAAC,mIAAA,CAAA,aAAU;8BACT,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,2NAAA,CAAA,gBAAa;gCAAC,WAAU;;;;;;0CACzB,6LAAC,mIAAA,CAAA,YAAS;gCAAC,WAAU;0CAA6B;;;;;;;;;;;;;;;;;8BAGtD,6LAAC,mIAAA,CAAA,cAAW;8BACR,cAAA,6LAAC;wBAAI,WAAU;;4BACZ,4BAAc,6LAAC,mNAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;0CACpC,6LAAC;gCAAE,WAAU;0CAA4B;;;;;;;;;;;;;;;;;;;;;;;IAKrD;IAEA,IAAI,CAAC,QAAQ;QACX,OAAO;IACT;IAEA,MAAM,sBAAsB,CAAC;QAC3B,IAAI,QAAQ,IAAI,OAAO;QACvB,IAAI,QAAQ,IAAI,OAAO;QACvB,OAAO;IACT;IAEA,MAAM,UAAgD;QACpD,gBAAgB,qNAAA,CAAA,aAAU;QAC1B,eAAe,yNAAA,CAAA,eAAY;QAC3B,mBAAmB,+MAAA,CAAA,YAAS;QAC5B,WAAW,8NAAA,CAAA,cAAW;IACxB;IAEA,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,6LAAC,mIAAA,CAAA,aAAU;;kCACT,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,mMAAA,CAAA,MAAG;gCAAC,WAAU;;;;;;0CACf,6LAAC,mIAAA,CAAA,YAAS;gCAAC,WAAU;0CAAyB;;;;;;0CAC9C,6LAAC,oIAAA,CAAA,QAAK;gCAAC,SAAQ;gCAAU,WAAU;0CAAU;;;;;;;;;;;;kCAE/C,6LAAC,mIAAA,CAAA,kBAAe;wBAAC,WAAU;kCAAuB;;;;;;;;;;;;0BAIpD,6LAAC,mIAAA,CAAA,cAAW;gBAAC,WAAU;;kCACrB,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAI,WAAU;;kDACX,6LAAC;wCAAE,WAAU;kDAA4C;;;;;;kDACzD,6LAAC;wCAAE,WAAW,CAAC,mBAAmB,EAAE,oBAAoB,OAAO,kBAAkB,GAAG;;4CAC/E,OAAO,kBAAkB;4CAAC;0DAAC,6LAAC;gDAAK,WAAU;0DAAkC;;;;;;;;;;;;;;;;;;0CAGtF,6LAAC,uIAAA,CAAA,WAAQ;gCAAC,OAAO,OAAO,kBAAkB;;;;;;;;;;;;kCAE9C,6LAAC,wIAAA,CAAA,YAAS;wBAAC,MAAK;wBAAS,WAAW;wBAAC,WAAU;wBAAS,cAAa;;4BAClE,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS;gCAC7B,MAAM,OAAO,OAAO,CAAC,QAAQ,KAAK,CAAC,IAAI,QAAQ,OAAO;gCACtD,qBACE,6LAAC,wIAAA,CAAA,gBAAa;oCAAC,OAAO,CAAC,KAAK,EAAE,OAAO;;sDACnC,6LAAC,wIAAA,CAAA,mBAAgB;sDACf,cAAA,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAK,WAAU;;;;;;kEAChB,6LAAC;wDAAK,WAAU;kEAAiC,QAAQ,KAAK;;;;;;;;;;;;;;;;;sDAGlE,6LAAC,wIAAA,CAAA,mBAAgB;sDACf,cAAA,6LAAC;gDAAG,WAAU;0DACX,QAAQ,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,uBAC1B,6LAAC;kEAAiB;uDAAT;;;;;;;;;;;;;;;;mCAV2B;;;;;4BAgBhD;4BACE,OAAO,aAAa,IAAI,OAAO,aAAa,CAAC,MAAM,GAAG,mBAClD,6LAAC,wIAAA,CAAA,gBAAa;gCAAC,OAAM;;kDACjB,6LAAC,wIAAA,CAAA,mBAAgB;kDACb,cAAA,6LAAC;4CAAI,WAAU;;8DACX,6LAAC,iNAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;8DACpB,6LAAC;oDAAK,WAAU;8DAAgC;;;;;;;;;;;;;;;;;kDAGxD,6LAAC,wIAAA,CAAA,mBAAgB;kDACb,cAAA,6LAAC,oIAAA,CAAA,QAAK;;8DACF,6LAAC,oIAAA,CAAA,cAAW;8DACR,cAAA,6LAAC,oIAAA,CAAA,WAAQ;;0EACL,6LAAC,oIAAA,CAAA,YAAS;0EAAC;;;;;;0EACX,6LAAC,oIAAA,CAAA,YAAS;gEAAC,WAAU;0EAAa;;;;;;0EAClC,6LAAC,oIAAA,CAAA,YAAS;gEAAC,WAAU;0EAAa;;;;;;;;;;;;;;;;;8DAG1C,6LAAC,oIAAA,CAAA,YAAS;8DACL,OAAO,aAAa,CAAC,GAAG,CAAC,CAAC,MAAM,sBAC7B,6LAAC,oIAAA,CAAA,WAAQ;;8EACL,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EAAe,KAAK,IAAI;;;;;;8EAC7C,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EAAc,KAAK,QAAQ;;;;;;8EAChD,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;;wEAAa;wEAAE,KAAK,KAAK,CAAC,OAAO,CAAC;;;;;;;;2DAH5C;;;;;;;;;;;;;;;;;;;;;;;;;;;4BAWvC,OAAO,YAAY,IAAI,OAAO,YAAY,CAAC,MAAM,GAAG,mBAChD,6LAAC,wIAAA,CAAA,gBAAa;gCAAC,OAAM;;kDACjB,6LAAC,wIAAA,CAAA,mBAAgB;kDACb,cAAA,6LAAC;4CAAI,WAAU;;8DACX,6LAAC,8NAAA,CAAA,cAAW;oDAAC,WAAU;;;;;;8DACvB,6LAAC;oDAAK,WAAU;8DAAgC;;;;;;;;;;;;;;;;;kDAGxD,6LAAC,wIAAA,CAAA,mBAAgB;kDACZ,cAAA,6LAAC,oIAAA,CAAA,QAAK;;8DACH,6LAAC,oIAAA,CAAA,cAAW;8DACR,cAAA,6LAAC,oIAAA,CAAA,WAAQ;;0EACL,6LAAC,oIAAA,CAAA,YAAS;0EAAC;;;;;;0EACX,6LAAC,oIAAA,CAAA,YAAS;gEAAC,WAAU;0EAAa;;;;;;0EAClC,6LAAC,oIAAA,CAAA,YAAS;gEAAC,WAAU;0EAAa;;;;;;;;;;;;;;;;;8DAG1C,6LAAC,oIAAA,CAAA,YAAS;8DACL,OAAO,YAAY,CAAC,GAAG,CAAC,CAAC,MAAM,sBAC5B,6LAAC,oIAAA,CAAA,WAAQ;;8EACL,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EAAe,KAAK,IAAI;;;;;;8EAC7C,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EAAc,KAAK,QAAQ;;;;;;8EAChD,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;;wEAAa;wEAAE,KAAK,KAAK,CAAC,OAAO,CAAC;;;;;;;;2DAH5C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAenD;GAhPgB;KAAA","debugId":null}},
    {"offset": {"line": 1826, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management/src/components/page-header.tsx"],"sourcesContent":["type PageHeaderProps = {\r\n  title: string;\r\n  description?: string;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nexport function PageHeader({ title, description, children }: PageHeaderProps) {\r\n  return (\r\n    <div className=\"flex flex-col items-start justify-between gap-4 md:flex-row md:items-center\">\r\n      <div className=\"grid gap-1\">\r\n        <h1 className=\"text-2xl font-bold tracking-tight md:text-3xl\">{title}</h1>\r\n        {description && (\r\n          <p className=\"text-muted-foreground\">{description}</p>\r\n        )}\r\n      </div>\r\n      {children && <div className=\"flex shrink-0 gap-2\">{children}</div>}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAMO,SAAS,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAmB;IAC1E,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAiD;;;;;;oBAC9D,6BACC,6LAAC;wBAAE,WAAU;kCAAyB;;;;;;;;;;;;YAGzC,0BAAY,6LAAC;gBAAI,WAAU;0BAAuB;;;;;;;;;;;;AAGzD;KAZgB","debugId":null}},
    {"offset": {"line": 1887, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/Inventory_Management/src/app/dashboard/page.tsx"],"sourcesContent":["\r\n\"use client\";\r\n\r\nimport * as React from 'react';\r\nimport { Suspense } from 'react';\r\nimport { Package, Shapes, DollarSign, PackageX, TrendingUp } from 'lucide-react';\r\nimport type { Item, Category, SoldItem } from '@/types';\r\nimport { getItems, getCategories, getSoldItems } from '@/lib/data';\r\nimport { StatCard } from '@/components/dashboard/stat-card';\r\nimport { StockChart } from '@/components/dashboard/stock-chart';\r\nimport { AIHealthReport } from '@/components/dashboard/ai-health-report';\r\nimport { Skeleton } from '@/components/ui/skeleton';\r\nimport { PageHeader } from '@/components/page-header';\r\n\r\nexport default function DashboardPage() {\r\n  const [items, setItems] = React.useState<Item[]>([]);\r\n  const [categories, setCategories] = React.useState<Category[]>([]);\r\n  const [soldItems, setSoldItems] = React.useState<SoldItem[]>([]);\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    const getDeterministicItemData = (item: Omit<Item, 'averageDailySales' | 'leadTimeDays'>): Item => {\r\n        const skuSeed = item.sku.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\r\n        const averageDailySales = (skuSeed % 19) + 1; \r\n        const leadTimeDays = (skuSeed % 9) + 2; \r\n        return {\r\n            ...item,\r\n            averageDailySales,\r\n            leadTimeDays,\r\n        };\r\n    };\r\n\r\n    const loadedItems = getItems().map((item: Omit<Item, 'averageDailySales' | 'leadTimeDays'>) => getDeterministicItemData(item));\r\n    setItems(loadedItems);\r\n    setCategories(getCategories());\r\n    setSoldItems(getSoldItems());\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const totalItems = items.length;\r\n  const lowStockItemsCount = items.filter(item => item.quantity === 0).length;\r\n  const totalValue = items.reduce((sum, item) => sum + item.quantity * item.price, 0);\r\n  const totalRevenue = soldItems.reduce((sum, item) => sum + item.quantitySold * item.price, 0);\r\n  const categoryCount = categories.length;\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"space-y-8\">\r\n        <PageHeader title=\"Dashboard\" description=\"An overview of your inventory.\" />\r\n        <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-5\">\r\n          <Skeleton className=\"h-28 rounded-lg\" />\r\n          <Skeleton className=\"h-28 rounded-lg\" />\r\n          <Skeleton className=\"h-28 rounded-lg\" />\r\n          <Skeleton className=\"h-28 rounded-lg\" />\r\n          <Skeleton className=\"h-28 rounded-lg\" />\r\n        </div>\r\n        <div className=\"grid grid-cols-1 gap-6 lg:grid-cols-7\">\r\n          <div className=\"lg:col-span-4\">\r\n              <Skeleton className=\"h-[400px] rounded-lg\" />\r\n          </div>\r\n          <div className=\"lg:col-span-3\">\r\n            <Skeleton className=\"h-[400px] rounded-lg\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      <PageHeader title=\"Dashboard\" description=\"An overview of your inventory.\" />\r\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-5\">\r\n        <StatCard\r\n          title=\"Total Items\"\r\n          value={totalItems.toLocaleString()}\r\n          icon={Package}\r\n        />\r\n        <StatCard\r\n          title=\"Low Stock Items\"\r\n          value={lowStockItemsCount.toString()}\r\n          icon={PackageX}\r\n        />\r\n        <StatCard\r\n          title=\"Inventory Value\"\r\n          value={`$${totalValue.toLocaleString('en-US', {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2,\r\n          })}`}\r\n          icon={DollarSign}\r\n        />\r\n        <StatCard\r\n          title=\"Categories\"\r\n          value={categoryCount.toString()}\r\n          icon={Shapes}\r\n        />\r\n        <StatCard\r\n          title=\"Total Revenue Generated\"\r\n          value={`$${totalRevenue.toLocaleString('en-US', {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2,\r\n          })}`}\r\n          icon={TrendingUp}\r\n        />\r\n      </div>\r\n      <div className=\"grid grid-cols-1 gap-6 lg:grid-cols-7\">\r\n        <div className=\"lg:col-span-4\">\r\n            <StockChart items={items} />\r\n        </div>\r\n        <div className=\"lg:col-span-3\">\r\n          <Suspense fallback={<Skeleton className=\"h-full w-full rounded-lg\" />}>\r\n            <AIHealthReport allItems={items} />\r\n          </Suspense>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}